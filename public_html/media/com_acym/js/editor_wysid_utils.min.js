"use strict";

var acym_helperBlockSeparator = {
  $container: '',
  onePartContainer: '',
  rightBorder: '',
  leftBorder: '',
  xAxis: 10,
  maxXAxis: 10,
  newXAxis: '',
  distanceMax: 5,
  blockName: {
    0: 'A',
    1: 'B',
    2: 'C',
    3: 'D'
  },
  initBlockSeparator: function initBlockSeparator() {
    acym_helperBlockSeparator.$container = jQuery('.acym__wysid__context__modal__container__block-settings');
    if (acym_helperBlockSeparator.$container.length < 1) return true;
    acym_helperBlockSeparator.$container.html(acym_helperBlockSeparator.areaGrid());
    setTimeout(function () {
      acym_helperBlockSeparator.initRows();
      acym_helperBlockSeparator.onePartContainer = acym_helperBlockSeparator.$container[0].offsetWidth / 12;
      acym_helperBlockSeparator.initMouseDown();
    }, 500);
  },
  initRows: function initRows() {
    var $row = jQuery('.acym__wysid__row__element--focus');
    var $th = $row.find('.acym__wysid__row__element__th');

    if ($th.length <= 1) {
      jQuery('.acym__wysid__context__modal__container--structure').hide();
      return true;
    }

    acym_helperBlockSeparator.initPadding();
    jQuery('.acym__wysid__context__modal__container--structure').show();
    $th.each(function (index) {
      var classValue = acym_helperBlockSeparator.getLargeClass(jQuery(this));
      var needRight = $th[index + 1] !== undefined;
      var needLeft = $th[index - 1] !== undefined;
      acym_helperBlockSeparator.$container.append(acym_helperBlockSeparator.generateArea(classValue[1], needRight, needLeft, index));
    });
  },
  elasticSVG: function elasticSVG(event) {
    var $path = jQuery('.separator_grabbed').find('path');
    var posLeftPath = $path.offset().left;
    var grabbingRight = event.clientX > posLeftPath;
    var distance = grabbingRight ? event.clientX - posLeftPath : posLeftPath - event.clientX;
    var plusOnX = distance > acym_helperBlockSeparator.distanceMax ? acym_helperBlockSeparator.maxXAxis : distance * acym_helperBlockSeparator.maxXAxis / acym_helperBlockSeparator.distanceMax;
    acym_helperBlockSeparator.newXAxis = grabbingRight ? acym_helperBlockSeparator.xAxis + plusOnX : acym_helperBlockSeparator.xAxis - plusOnX;
    $path.attr('d', 'M 10,10 C 10 10, ' + acym_helperBlockSeparator.newXAxis + ' 50, 10 90');
  },
  releaseSVG: function releaseSVG() {
    var beforeResetAxis = acym_helperBlockSeparator.newXAxis > acym_helperBlockSeparator.xAxis ? acym_helperBlockSeparator.xAxis - 6 : acym_helperBlockSeparator.xAxis + 6;
    var $separatorGrabbed = jQuery('.separator_grabbed');
    $separatorGrabbed.find('path').attr('d', 'M 10,10 C 10 10, ' + beforeResetAxis + ' 50, 10 90');
    setTimeout(function () {
      $separatorGrabbed.find('path').attr('d', 'M 10,10 C 10 10, ' + acym_helperBlockSeparator.xAxis + ' 50, 10 90');
    }, 150);
  },
  initMouseDown: function initMouseDown() {
    jQuery('.separator_right, .separator_left').off('mousedown').on('mousedown', function (event) {
      jQuery('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
      var $separator = jQuery(this);
      $separator.addClass('separator_grabbed');
      acym_helperBlockSeparator.$container.find('.acym__wysid__context__modal__container__block-settings--grid').addClass('grid-visible');
      var $parent = jQuery(this).closest('.cell');
      var $parentSiblings = $parent.next();
      var $parentSiblingsBefore = $parent.prev('.acym__block__separator__area');
      acym_helperBlockSeparator.initMouseMove($parent, $parentSiblings, $parentSiblingsBefore, $separator.attr('class').indexOf('left') !== -1);
      acym_helperBlockSeparator.setMouseUp($separator);
    });
  },
  setMouseUp: function setMouseUp($separator) {
    jQuery(document).off('mouseup').on('mouseup', function () {
      jQuery(document).off('mousemove');
      acym_helperBlockSeparator.releaseSVG();
      $separator.removeClass('separator_grabbed');
      acym_helperBlockSeparator.$container.find('.grid-visible').removeClass('grid-visible');
      acym_editorWysidRowSelector.setRowSelector();
    });
  },
  setRightBorder: function setRightBorder($parent) {
    acym_helperBlockSeparator.rightBorder = parseInt($parent.offset().left) + parseInt($parent.width()) - 20;
  },
  setLeftBorder: function setLeftBorder($parent) {
    acym_helperBlockSeparator.leftBorder = parseInt($parent.offset().left);
  },
  changeLength: function changeLength($el, number) {
    $el.find('.area__length').html(number);
  },
  getLargeClass: function getLargeClass($el) {
    var className = $el.attr('class').match(/(large\-)([0-9]*)/);

    if (null !== className) {
      return [className[1], parseInt(className[2])];
    }

    return false;
  },
  initMouseMove: function initMouseMove($parent, $parentSiblings, $parentSiblingsBefore, isLeft) {
    acym_helperBlockSeparator.setRightBorder($parent);
    acym_helperBlockSeparator.setLeftBorder($parent);
    jQuery(document).off('mousemove').on('mousemove', function (event) {
      acym_helperBlockSeparator.elasticSVG(event);
      var cursor = event.clientX;

      if (cursor > acym_helperBlockSeparator.rightBorder) {
        if (!isLeft && acym_helperBlockSeparator.rightBorder + acym_helperBlockSeparator.onePartContainer < cursor) {
          acym_helperBlockSeparator.up($parent, $parentSiblings, $parentSiblingsBefore, false);
        }
      } else if (cursor < acym_helperBlockSeparator.rightBorder) {
        if (!isLeft && acym_helperBlockSeparator.rightBorder - acym_helperBlockSeparator.onePartContainer > cursor) {
          acym_helperBlockSeparator.down($parent, $parentSiblings, $parentSiblingsBefore, false);
        }
      }

      if (cursor > acym_helperBlockSeparator.leftBorder) {
        if (isLeft && acym_helperBlockSeparator.leftBorder + acym_helperBlockSeparator.onePartContainer < cursor) {
          acym_helperBlockSeparator.down($parent, $parentSiblings, $parentSiblingsBefore, true);
        }
      } else if (cursor < acym_helperBlockSeparator.leftBorder) {
        if (isLeft && acym_helperBlockSeparator.leftBorder - acym_helperBlockSeparator.onePartContainer > cursor) {
          acym_helperBlockSeparator.up($parent, $parentSiblings, $parentSiblingsBefore, true);
        }
      }
    });
  },
  up: function up($parent, $parentSib, $parentSiblingsBefore, isLeft) {
    //we get the div to change
    var $parentSibToChange = isLeft ? $parentSiblingsBefore : $parentSib;
    var parentClass = acym_helperBlockSeparator.getLargeClass($parent);
    var parentSibClass = acym_helperBlockSeparator.getLargeClass($parentSibToChange); //if we are at the minimum we stop

    if (parentSibClass[1] === 1) return true; //we change the class values

    parentClass[1]++;
    parentSibClass[1]--;
    var newParentClass = parentClass[0] + parentClass[1];
    var newParentSibClass = parentSibClass[0] + parentSibClass[1];
    $parent.attr('class', 'cell acym__block__separator__area ' + newParentClass);
    $parentSibToChange.attr('class', 'cell acym__block__separator__area ' + newParentSibClass);
    acym_helperBlockSeparator.changeLength($parent, parentClass[1]);
    acym_helperBlockSeparator.changeLength($parentSibToChange, parentSibClass[1]);
    acym_helperBlockSeparator.changeInTemplate(); //we stop and call back the mousemove event

    acym_helperBlockSeparator.initMouseMove($parent, $parentSib, $parentSiblingsBefore, isLeft);
  },
  down: function down($parent, $parentSib, $parentSiblingsBefore, isLeft) {
    //we get the div to change
    var $parentSibToChange = isLeft ? $parentSiblingsBefore : $parentSib;
    var parentClass = acym_helperBlockSeparator.getLargeClass($parent);
    var parentSibClass = acym_helperBlockSeparator.getLargeClass($parentSibToChange); //if we are at the minimum we stop

    if (parentClass[1] === 1) return true; //we change the class values

    parentClass[1]--;
    parentSibClass[1]++;
    var newParentClass = parentClass[0] + parentClass[1];
    var newParentSibClass = parentSibClass[0] + parentSibClass[1];
    $parent.attr('class', 'cell acym__block__separator__area ' + newParentClass);
    $parentSibToChange.attr('class', 'cell  acym__block__separator__area ' + newParentSibClass);
    acym_helperBlockSeparator.changeLength($parent, parentClass[1]);
    acym_helperBlockSeparator.changeLength($parentSibToChange, parentSibClass[1]);
    acym_helperBlockSeparator.changeInTemplate(); //we stop and call back the mousemove event

    acym_helperBlockSeparator.initMouseMove($parent, $parentSib, $parentSiblingsBefore, isLeft);
  },
  generateArea: function generateArea(number, needRight, needLeft, indexTh) {
    var svg = '<svg width="20" height="100" class="sidebar" viewBox="0 0 20 100"><path class="s-path" fill="none" d="M 10,10 C 10 10, 10 50, 10 90" stroke-linecap="round"/></svg>';
    var rightSeparator = needRight ? "<div class=\"separator_right\">".concat(svg, "</div>") : '';
    var leftSeparator = needLeft ? "<div class=\"separator_left\">".concat(svg, "</div>") : '';
    return "<div class=\"cell large-".concat(number, " acym__block__separator__area\"><p class=\"area__name\">").concat(acym_helperBlockSeparator.blockName[indexTh], "</p><p class=\"area__length\">").concat(number, "</p>").concat(rightSeparator).concat(leftSeparator, "</div>");
  },
  changeInTemplate: function changeInTemplate() {
    var $row = jQuery('.acym__wysid__row__element--focus');
    var $th = $row.find('.acym__wysid__row__element__th');
    var classes = {};
    acym_helperBlockSeparator.$container.find(' > .acym__block__separator__area').each(function (index) {
      var largeClass = acym_helperBlockSeparator.getLargeClass(jQuery(this));
      classes[index] = largeClass[0] + largeClass[1];
    });
    $th.each(function (index) {
      var largeClass = acym_helperBlockSeparator.getLargeClass(jQuery(this));
      jQuery(this).removeClass(largeClass[0] + largeClass[1]);
      jQuery(this).addClass(classes[index]);
    });
  },
  areaGrid: function areaGrid() {
    var gridArea = '<div class="cell grid-x acym-grid-margin-x acym__wysid__context__modal__container__block-settings--grid">';

    for (var i = 0; i < 12; i++) {
      gridArea += '<div class="cell large-1"></div>';
    }

    gridArea += '</div>';
    return gridArea;
  },
  initPadding: function initPadding() {
    var $th = jQuery('.acym__wysid__row__element--focus .acym__wysid__row__element__th');
    var $paddingContainer = jQuery('.acym__wysid__context__modal__block-padding');
    var html = "<h6 class=\"cell margin-top-1 acym__wysid__context__block__padding__title\">".concat(ACYM_JS_TXT.ACYM_SPACE_BETWEEN_BLOCK, "</h6>");
    $paddingContainer.html(html);
    var horizontalPadding = '';
    var verticalPadding = '';

    for (var i = 0; i < $th.length - 1; i++) {
      //get the padding of the current and next element and calculate the global
      var paddingElementLeft = acym_helper.getIntValueWithoutPixel($th[i].style.paddingRight);
      var paddingElementRight = acym_helper.getIntValueWithoutPixel($th[i + 1].style.paddingLeft);
      var paddingGlobal = paddingElementRight + paddingElementLeft; //blocks

      var blockLeft = acym_helperBlockSeparator.blockName[i];
      var blockRight = acym_helperBlockSeparator.blockName[i + 1]; //text

      var textToDisplay = acym_helper.sprintf(ACYM_JS_TXT.ACYM_X1_AND_X2, blockLeft, blockRight); //add the input to change this value

      var content = "<div class=\"cell grid-x acym_vcenter margin-bottom-1\"><p class=\"cell shrink\">".concat(textToDisplay, "</p>");
      content += "<input type=\"number\" min=\"0\" id=\"acym__wysid__context__block__padding-".concat(i, "\" value=\"").concat(paddingGlobal, "\" class=\"cell margin-bottom-0 small-4 margin-left-1 acym__wysid__context__block__padding--input\">");
      content += '</div>';
      horizontalPadding += content; //add the input to change this value

      var contentVertical = "<div class=\"cell grid-x acym_vcenter margin-bottom-1\"><p class=\"cell shrink\">".concat(textToDisplay, "</p>");
      contentVertical += "<input type=\"number\" min=\"0\" id=\"acym__wysid__context__block__vertical__padding-".concat(i, "\" value=\"0\" class=\"cell margin-bottom-0 small-4 margin-left-1 acym__wysid__context__block__vertical__padding--input\">");
      contentVertical += '</div>';
      verticalPadding += contentVertical;
    }

    html += "<div class=\"cell grid-x small-6 acym__wysid__context__block__padding__horizontal\">";
    html += "<p class=\"cell margin-bottom-1\">".concat(ACYM_JS_TXT.ACYM_HORIZONTAL_PADDING, " ").concat(acym_helperTooltip.addInfo(ACYM_JS_TXT.ACYM_HORIZONTAL_PADDING_DESC), "</p>");
    html += horizontalPadding;
    html += "</div>";
    html += "<div class=\"cell grid-x small-6\">";
    html += "<p class=\"cell margin-bottom-1\">".concat(ACYM_JS_TXT.ACYM_VERTICAL_PADDING, " ").concat(acym_helperTooltip.addInfo(ACYM_JS_TXT.ACYM_VERTICAL_PADDING_DESC), "</p>");
    html += verticalPadding;
    html += "</div>";
    $paddingContainer.html(html);
    acym_helperTooltip.setTooltip();
    acym_helperBlockSeparator.setPadding($th);
    acym_helperBlockSeparator.setVerticalPadding($th);
  },
  setPadding: function setPadding($th) {
    jQuery('.acym__wysid__context__block__padding--input').off('change').on('change', function (e) {
      //get the input him self
      var $self = jQuery(this);
      var valueEntered = $self.val(); //check the value

      if (valueEntered < 0) {
        $self.val(0);
      } //if value ok then set it


      var idSplit = $self.attr('id').split('-');
      if (undefined === idSplit[1]) return false;
      var newValue = Math.round(valueEntered / 2);
      idSplit[1] = parseInt(idSplit[1]);
      jQuery($th[idSplit[1]]).css('padding-right', newValue + 'px');
      jQuery($th[idSplit[1] + 1]).css('padding-left', newValue + 'px');
    });
  },
  setVerticalPadding: function setVerticalPadding($th) {
    var $parentTable = jQuery($th[0]).closest('.acym__wysid__row__element');

    if ($parentTable.attr('id') === '' || $parentTable.attr('id') === undefined) {
      $parentTable.attr('id', this.generatedNewIdParentTable());
    }

    var $styleTag = jQuery("[data-vertical-padding=\"".concat($parentTable.attr('id'), "\"]"));

    for (var i = 0; i < $th.length; i++) {
      if (jQuery($th[i]).attr('class').indexOf('acym__wysid__row__element__th__vertical__padding') === -1) {
        jQuery($th[i]).addClass('acym__wysid__row__element__th__vertical__padding-' + i);
      } else if ($styleTag.length > 0) {
        var styleTagText = $styleTag.html();
        var rulePaddingTop = "acym__wysid__row__element__th__vertical__padding-".concat(i, "{padding-top: ([0-9]*)px");
        var rulePaddingBottom = "acym__wysid__row__element__th__vertical__padding-".concat(i, "{padding-bottom: ([0-9]*)px");
        var topRegex = new RegExp(rulePaddingTop, 'g');
        var bottomRegex = new RegExp(rulePaddingBottom, 'g');
        var topPadding = topRegex.exec(styleTagText);
        var bottomPadding = bottomRegex.exec(styleTagText);

        if (topPadding !== null) {
          var $previousInput = jQuery("#acym__wysid__context__block__vertical__padding-".concat(i - 1));
          $previousInput.val(parseInt($previousInput.val()) + parseInt(topPadding[1]));
        }

        if (bottomPadding !== null) {
          var $currentInput = jQuery("#acym__wysid__context__block__vertical__padding-".concat(i));
          $currentInput.val(parseInt($currentInput.val()) + parseInt(bottomPadding[1]));
        }
      }
    }

    jQuery('.acym__wysid__context__block__vertical__padding--input').off('change').on('change', function () {
      var $self = jQuery(this);
      var valueEntered = $self.val();

      if (valueEntered < 0) {
        $self.val(0);
        return;
      }

      $styleTag = jQuery("[data-vertical-padding=\"".concat($parentTable.attr('id'), "\"]"));
      if ($styleTag.length > 0) $styleTag.remove();
      var style = '';
      jQuery('.acym__wysid__context__block__vertical__padding--input').each(function (index, $input) {
        $input = jQuery($input);
        var indexUp = index + 1;
        var inputValue = Math.round($input.val() / 2);
        style += "#".concat($parentTable.attr('id'), " .acym__wysid__row__element__th__vertical__padding-").concat(index, "{padding-bottom: ").concat(inputValue, "px !important}");
        style += "#".concat($parentTable.attr('id'), " .acym__wysid__row__element__th__vertical__padding-").concat(indexUp, "{padding-top: ").concat(inputValue, "px !important}");
      });
      $parentTable.prepend("<style data-vertical-padding=\"".concat($parentTable.attr('id'), "\">\n                                            @media screen and (max-width: 480px){\n                                                ").concat(style, "\n                                            }\n                                         </style>"));
    });
  },
  generatedNewIdParentTable: function generatedNewIdParentTable() {
    var id = 'acym__wysid__row__element' + Math.floor(Math.random() * Math.floor(9999999));

    if (jQuery("#".concat(id)).length > 0) {
      return this.generatedNewIdParentTable();
    } else {
      return id;
    }
  },
  changeIdOnduplicate: function changeIdOnduplicate($element) {
    var newId = this.generatedNewIdParentTable();
    var formerId = $element.attr('id');
    if (formerId === undefined) return $element;
    $element.attr('id', newId);
    var $styleTag = $element.find('[data-vertical-padding]');
    if ($styleTag.length === 0) return $element;
    var styleTagHtml = $styleTag.html();
    $styleTag.attr('data-vertical-padding', newId);
    var formerIdRegex = new RegExp(formerId, 'g');
    $styleTag.html(styleTagHtml.replace(formerIdRegex, newId));
    return $element;
  }
};
var acym_editorWysidColorPicker = {
  setColorPickerForContextModal: function setColorPickerForContextModal($element, cssPropertyPrevious, $elementFocus, $previousElement, cssPropertyNew) {
    $element.spectrum({
      color: $previousElement.css(cssPropertyPrevious),
      preferredFormat: 'hex',
      showButtons: false,
      showInput: true,
      move: function move(color) {
        $elementFocus.css(cssPropertyNew, color.toHexString());
      },
      change: function change(color) {
        $elementFocus.css(cssPropertyNew, color.toHexString());
      },
      containerClassName: 'acym__context__color__picker'
    });
  },
  setRowColorPickerWYSID: function setRowColorPickerWYSID($current) {
    var $colorPicker = jQuery('#acym__wysid__context__block__background-color');
    $colorPicker.spectrum({
      color: $current.css('background-color'),
      preferredFormat: 'hex',
      showButtons: false,
      showInput: true,
      showInitial: true,
      showPalette: true,
      palette: [['#fff'], ['#000']],
      maxSelectionSize: 1,
      move: function move(color) {
        $current.css('background-color', color.toHexString()).attr('bgcolor', color.toHexString());
        $current.css('background-image', '');
      },
      change: function change(color) {
        $current.css('background-color', color.toHexString()).attr('bgcolor', color.toHexString());
        $current.css('background-image', '');
      }
    });
  },
  setGeneralColorPickerWYSID: function setGeneralColorPickerWYSID() {
    var $template = jQuery('.acym__wysid__template__content');
    var $generalColorPicker = jQuery('#acym__wysid__background-colorpicker');
    /**
     * color: Add current template's background color in the color picker
     * move/change: Modify template's background color on move / change
     */

    $generalColorPicker.spectrum({
      color: $template.css('background-color'),
      preferredFormat: 'hex',
      showButtons: false,
      showInput: true,
      showPalette: true,
      palette: [['#fff'], ['#000']],
      maxSelectionSize: 1,
      move: function move(color) {
        acym_editorWysidFontStyle.setSettingsElementStyle('#acym__wysid__background-colorpicker', 'background-color', color.toHexString());
      },
      change: function change(color) {
        acym_editorWysidFontStyle.setSettingsElementStyle('#acym__wysid__background-colorpicker', 'background-color', color.toHexString());
      }
    });
  },
  setSettingsColorPickerWYSID: function setSettingsColorPickerWYSID(colorHex) {
    var $colorPicker = jQuery('#acym__wysid__right__toolbar__settings__color');
    var $element = jQuery('#acym__wysid__right__toolbar__settings__font--select').val();
    $colorPicker.spectrum({
      color: colorHex != '' ? colorHex : 'black',
      preferredFormat: 'hex',
      showButtons: false,
      showInput: true,
      showPalette: true,
      palette: [['#fff'], ['#000']],
      maxSelectionSize: 1,
      move: function move(color) {
        acym_editorWysidFontStyle.setSettingsElementStyle($element, 'color', color.toHexString());
      },
      change: function change(color) {
        acym_editorWysidFontStyle.setSettingsElementStyle($element, 'color', color.toHexString());
      }
    });
  }
};
var acym_editorWysidContextModal = {
  clickedOnScrollbar: function clickedOnScrollbar(mouseX) {
    var $rightMenu = jQuery('#acym__wysid__right-toolbar');
    var offset = $rightMenu.offset();
    var left = Math.round(offset.left);
    return offset.left <= mouseX && mouseX <= left + $rightMenu.width();
  },
  hideContextModal: function hideContextModal($contextModal, $element) {
    $contextModal.hide();
    jQuery('.acym__wysid__right__toolbar__current-block__empty').show();

    if ($element === undefined || !acym_editorWysidContextModal.isOpeningContextModal($element)) {
      jQuery('#acym__wysid__right__toolbar__design__tab').click();
    }
  },
  isOpeningContextModal: function isOpeningContextModal($element) {
    var isOpening = false,
        classesOpeningContext = ['acymailing_content', 'acym__wysid__tinymce--image', 'acym__wysid__column__element__separator', 'acym__wysid__column__element__share', 'acym__wysid__column__element__follow', 'acy-editor__space', 'acym__wysid__column__element__button', 'acym__wysid__row__selector', 'acym__wysid__right__toolbar__tabs'];
    jQuery.each(classesOpeningContext, function (index, value) {
      if ($element.closest('.' + value).length > 0) isOpening = true;
    });
    return isOpening;
  },
  showContextModal: function showContextModal($contextModal) {
    jQuery('.acym__wysid__context__modal').hide();
    jQuery('#acym__wysid__right__toolbar__block__tab').click();
    $contextModal.show();
    jQuery('.acym__wysid__right__toolbar__current-block__empty').hide();
    jQuery('#acym__wysid__right__toolbar__current-block').off('mousedown').on('mousedown', function (event) {
      event.stopPropagation();
    });
    acym_editorWysidToolbar.setRightToolbarWYSID();
  },
  setBlockContextModalWYSID: function setBlockContextModalWYSID() {
    jQuery('.acym__wysid__row__selector').off('click').on('click', function (e) {
      e.stopPropagation();
      e.preventDefault();
      var previousColor = '#ffffff';
      jQuery('.acym__wysid__row__selector--focus').removeClass('acym__wysid__row__selector--focus');
      jQuery('.acym__wysid__row__element--focus').removeClass('acym__wysid__row__element--focus');
      var $table = jQuery(this).closest('.acym__wysid__row__element');
      var $selector = jQuery(this);
      $selector.addClass('acym__wysid__row__selector--focus');
      $selector.closest('.acym__wysid__row__element').addClass('acym__wysid__row__element--focus');
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__block__background-color'), 'background-color', $table, $table, 'background-color');
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__block__border__color'), 'border-color', $table, $table, 'border-color');
      acym_editorWysidColorPicker.setRowColorPickerWYSID($table);
      acym_editorWysidImage.addBackgroundImgToRows($table);

      if ($table.css('background-color') === 'transparent') {
        jQuery('.acym__wysid__context__block__transparent__bg').click();
      }

      jQuery('[name="transparent_background"]').next().off('change').on('change', function () {
        if (jQuery(this).is(':checked')) {
          previousColor = $table.css('background-color');
          $table.css('background-color', 'transparent').attr('bgcolor', 'transparent');
        } else {
          $table.css('background-color', previousColor).attr('bgcolor', previousColor);
        }
      });
      acym_helperBlockSeparator.initBlockSeparator();
      var $idInput = jQuery('#acym__wysid__context__block__custom_id');
      $idInput.val($table.attr('id'));
      $idInput.off('keyup').on('keyup', function (event) {
        if (event.which === 32) event.preventDefault();
        $table.attr('id', jQuery(this).val());
      });
      jQuery('[data-block-padding]').each(function () {
        jQuery(this).val($table.css('padding-' + jQuery(this).attr('data-block-padding')).replace(/[^-\d\.]/g, ''));
        jQuery(this).off('change').on('change', function (event) {
          $table.css('padding-' + jQuery(this).attr('data-block-padding'), jQuery(this).val() + 'px');

          if (jQuery(this).attr('data-block-padding') === 'top' || jQuery(this).attr('data-block-padding') === 'bottom') {
            $selector.css('height', $table.height() + parseInt($table.css('padding-top').replace(/[^-\d\.]/g, '')) + parseInt($table.css('padding-bottom').replace(/[^-\d\.]/g, '')) + 'px');
          }
        });
      });
      jQuery('.acym__wysid__context__block__border__actions').each(function () {
        jQuery(this).val($table.css(jQuery(this).attr('data-css')).replace(/[^-\d\.]/g, ''));
        jQuery(this).off('change').on('change', function (event) {
          if (jQuery(this).val() > parseInt(jQuery(this).attr('max'))) {
            jQuery(this).val(parseInt(jQuery(this).attr('max')));
            event.stopPropagation();
          }

          $table.css(jQuery(this).attr('data-css'), jQuery(this).val() + 'px');

          if (jQuery(this).attr('data-css') === 'border-width') {
            $table.css('border-style', jQuery(this).val() === 0 ? 'none' : 'solid');
            var offsetTemplate = jQuery('.acym__wysid__template__content').offset();
            var offsetTable = $selector.closest('.acym__wysid__row__element').offset();
            var heightSelector = $table.height() + parseInt($table.css('padding-top').replace(/[^-\d\.]/g, '')) + parseInt($table.css('padding-bottom').replace(/[^-\d\.]/g, '')) + parseInt($table.css('border-width').replace(/[^-\d\.]/g, '')) * 2;
            $selector.css({
              'left': '-' + (offsetTable.left - offsetTemplate.left + parseInt($selector.closest('.acym__wysid__row__element').css('border-width').replace(/[^-\d\.]/g, ''))) + 'px',
              'height': heightSelector,
              'top': 0 - parseInt($table.css('border-width').replace(/[^-\d\.]/g, '')) + 'px'
            });
          }
        });
      });
      jQuery('#acym__wysid__context__block__edit-html').off('click').on('click', function () {
        var event = new Event('editor_change');
        var contentInput = document.getElementById('acym__wysid__block__html__content');
        var $tbody = $table.find('> tbody');
        $tbody.find('.acym__wysid__element__toolbox').remove();
        contentInput.value = $tbody.html();
        contentInput.dispatchEvent(event);
        jQuery('#acym__wysid__editor__source, #acym__wysid__right-toolbar__overlay').addClass('acym__wysid__visible');
      });
      var $contextBlock = jQuery('#acym__wysid__context__block');
      acym_editorWysidContextModal.showContextModal($contextBlock);
      $contextBlock.off('mousedown').on('mousedown', function (event) {
        jQuery('.sp-container').addClass('sp-hidden').attr('style', '');
        event.stopPropagation();
      });
      jQuery(window).off('mousedown').on('mousedown', function (event) {
        if (acym_editorWysidContextModal.clickedOnScrollbar(event.clientX, $contextBlock)) return true;

        if (!jQuery(event.target).hasClass('acym__wysid__row__selector') && !jQuery('.sp-container').is(':visible') && !jQuery(event.target).closest('#acym__wysid__editor__source').length > 0) {
          jQuery('#acym__wysid__editor__source, #acym__wysid__right-toolbar__overlay').removeClass('acym__wysid__visible');
          jQuery('.acym__wysid__row__selector--focus').removeClass('acym__wysid__row__selector--focus');
          jQuery('.acym__wysid__row__element--focus').removeClass('acym__wysid__row__element--focus');
          previousColor = '#ffffff';
          jQuery(this).off('mousedown');
          acym_editorWysidContextModal.hideContextModal($contextBlock, jQuery(event.target));
          jQuery('.acym__wysid__context__modal__container--structure').hide();
          if (!jQuery(event.target).parent().hasClass('acym__wysid__tinymce--text')) acym_helperEditorWysid.setColumnRefreshUiWYSID();
          acym_editorWysidVersioning.setUndoAndAutoSave();
        }
      });
    });
  },
  setImageContextModal: function setImageContextModal($img) {
    jQuery('.acym__wysid__media__inserted--selected').removeClass('acym__wysid__media__inserted--selected');
    $img.addClass('acym__wysid__media__inserted--selected');
    var $contextImage = jQuery('#acym__wysid__context__image');
    var $alignments = jQuery('.acym__wysid__context__image__align');
    var $linkInput = jQuery('#acym__wysid__context__image__link');
    var $urlInput = jQuery('#acym__wysid__context__image__url');
    $alignments.css('background-color', 'inherit');
    jQuery('[data-float="' + jQuery('.acym__wysid__media__inserted--selected').css('float') + '"]').css('background-color', '');
    $alignments.each(function () {
      jQuery(this).off('click').on('click', function () {
        var $imgSelected = jQuery('.acym__wysid__media__inserted--selected');
        var cssToApply = acym_helper.parseJson(jQuery(this).attr('data-css'));
        var alignmentPosition = jQuery(this).attr('data-float') === 'none' ? 'center' : jQuery(this).attr('data-float');
        $imgSelected.css(cssToApply);
        $imgSelected.closest('p').css('text-align', alignmentPosition);
        jQuery('.acym__wysid__context__image__align').css('background-color', 'inherit');
        jQuery(this).css('background-color', '');
      });
    });
    var $aTag = jQuery('.acym__wysid__media__inserted--selected').closest('.acym__wysid__link__image');
    $linkInput.val($aTag.length > 0 ? $aTag.attr('href') : '');
    $urlInput.val(jQuery('.acym__wysid__media__inserted--selected').attr('src'));
    jQuery('#acym__wysid__context__image__change').off('click').on('click', function () {
      var $selectedImg = jQuery('.acym__wysid__media__inserted--selected');

      if ($selectedImg.hasClass('acym__wysid__media__giphy')) {
        acym_editorWysidNewContent.addGiphyWYSID($selectedImg.closest('.acym__wysid__column__element'));
      } else {
        acym_editorWysidImage.openMediaManage($selectedImg.closest('.acym__wysid__column__element'));
      }
    });
    $urlInput.off('keyup').on('keyup', function () {
      jQuery('.acym__wysid__media__inserted--selected').attr('src', this.value);
    });
    $linkInput.off('keyup').on('keyup', function () {
      var $link = jQuery('.acym__wysid__media__inserted--selected').closest('.acym__wysid__link__image');

      if ($link.length > 0 && jQuery(this).val() === '') {
        $link.replaceWith(jQuery('.acym__wysid__media__inserted--selected')[0].outerHTML);
      } else if ($link.length === 0 && jQuery(this).val() === '') {
        return true;
      }

      if ($link.length === 0) {
        jQuery('.acym__wysid__media__inserted--selected').replaceWith('<a href="' + jQuery(this).val() + '" target="_blank" class="acym__wysid__link__image">' + jQuery('.acym__wysid__media__inserted--selected')[0].outerHTML + '</a>');
      } else {
        $link.attr('href', jQuery(this).val());
      }
    });
    acym_editorWysidContextModal.showContextModal($contextImage);
    $contextImage.off('mousedown').on('mousedown', function (event) {
      event.stopPropagation();
    });
    jQuery(window).off('mousedown').on('mousedown', function (event) {
      if (acym_editorWysidContextModal.clickedOnScrollbar(event.clientX, $contextImage) || jQuery(event.target).hasClass('acym__wysid__media__inserted')) {
        return true;
      }

      jQuery('.acym__wysid__media__inserted--selected').removeClass('acym__wysid__media__inserted--selected');
      jQuery(this).off('mousedown');
      var time = new Date().getTime();
      if (time < acym_helperEditorWysid.timeClickImage + 100) acym_editorWysidImage.doubleClickImage($img);
      acym_editorWysidContextModal.hideContextModal($contextImage, jQuery(event.target));
      acym_helperEditorWysid.setColumnRefreshUiWYSID(false);
      acym_editorWysidVersioning.setUndoAndAutoSave();
    });
  },
  setButtonContextModalWYSID: function setButtonContextModalWYSID() {
    jQuery('.acym__wysid__column__element__button').off('click').on('click', function (e) {
      e.stopPropagation();
      e.preventDefault();
      jQuery('.acym__context__color__picker').remove();
      jQuery('.acym__wysid__column__element__button--focus').removeClass('acym__wysid__column__element__button--focus');
      jQuery(this).addClass('acym__wysid__column__element__button--focus');
      if (!jQuery(this).hasClass('acym__wysid__content-no-settings-style')) jQuery(this).addClass('acym__wysid__content-no-settings-style');
      var $button = jQuery(this);
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__button__background-color'), 'background-color', $button, $button, 'background-color');
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__button__border-color'), 'border-left-color', $button, $button, 'border-color');
      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__button__color'), 'color', $button, $button, 'color');
      var $inputLink = jQuery('.acym__wysid__context__button__link__container');
      var $inputText = jQuery('.acym__wysid__context__button__text__container');
      var $buttonsType = jQuery('.acym__wysid__context__button--type').removeClass('button-radio-unselected').addClass('button-radio-unselected');

      if ($button.attr('href').indexOf('{confirm}') !== -1) {
        jQuery('[acym-data-type="confirm"]').removeClass('button-radio-unselected');
        $inputLink.hide();
      } else if ($button.attr('href').indexOf('{unsubscribe}') !== -1) {
        jQuery('[acym-data-type="unsubscribe"]').removeClass('button-radio-unselected');
        $inputLink.hide();
      } else {
        jQuery('[acym-data-type="call-action"]').removeClass('button-radio-unselected');
        $inputLink.show();
      }

      $buttonsType.off('click').on('click', function () {
        var $self = jQuery(this);
        if (!$self.hasClass('button-radio-unselected')) return;
        $buttonsType.addClass('button-radio-unselected');
        $self.removeClass('button-radio-unselected');
        var linkType = $self.attr('acym-data-type');

        if (linkType.indexOf('call-action') !== -1) {
          $inputLink.find('#acym__wysid__context__button__link, .acym__wysid__context__button__link').val('#').trigger('change');
          $inputText.find('#acym__wysid__context__button__text').val(ACYM_JS_TXT.ACYM_BUTTON).trigger('change');
          $inputLink.show();
        } else {
          var dynamicLink = "{".concat(linkType, "}{/").concat(linkType, "}");
          $inputLink.find('#acym__wysid__context__button__link, .acym__wysid__context__button__link').val(dynamicLink).trigger('change');
          $inputText.find('#acym__wysid__context__button__text').val(ACYM_JS_TXT["ACYM_".concat(linkType.toUpperCase())]).trigger('change');
          $inputLink.hide();
        }
      });
      var $contextBtn = jQuery('#acym__wysid__context__button');
      jQuery('#acym__wysid__context__button__border-radius').val($button.css('border-radius').replace(/[^-\d\.]/g, '')).off('change paste keyup').on('change paste keyup', function () {
        $button.css('border-radius', jQuery(this).val() + 'px');
      });
      jQuery('#acym__wysid__context__button__border-width').val($button.css('border-left-width').replace(/[^-\d\.]/g, '')).off('change paste keyup').on('change paste keyup', function () {
        $button.css('border-width', jQuery(this).val() + 'px');
      });
      jQuery('#acym__wysid__context__button__font-family').val($button.css('font-family').replace(/['"]/g, '')).off('change').on('change', function () {
        $button.css('font-family', jQuery(this).val());
      });
      jQuery('#acym__wysid__context__button__font-size').val($button.css('font-size').replace(/[^-\d\.]/g, '')).off('change').on('change', function () {
        $button.css('font-size', jQuery(this).val() + 'px');
      });
      jQuery('#acym__wysid__context__button__text').val($button.text()).off('change paste keyup').on('change paste keyup', function () {
        $button.text(jQuery(this).val());
      });
      jQuery('#acym__wysid__context__button__link, .acym__wysid__context__button__link').val($button.attr('href')).off('change paste keyup').on('change paste keyup', function () {
        jQuery(this).val(jQuery(this).val().trim());
        $button.attr('href', jQuery(this).val());
      });
      jQuery('#acym__wysid__context__button__bold').css('background-color', $button.css('font-weight') == 700 ? '' : 'inherit').off('click').on('click', function () {
        $button.css('font-weight') == 700 ? jQuery('#acym__wysid__context__button__bold').css('background-color', 'inherit') && $button.css('font-weight', 'inherit') : jQuery('#acym__wysid__context__button__bold').css('background-color', '') && $button.css('font-weight', 700);
      });
      jQuery('#acym__wysid__context__button__italic').css('background-color', $button.css('font-style') == 'italic' ? '' : 'inherit').off('click').on('click', function () {
        $button.css('font-style') == 'italic' ? jQuery('#acym__wysid__context__button__italic').css('background-color', 'inherit') && $button.css('font-style', 'inherit') : jQuery('#acym__wysid__context__button__italic').css('background-color', '') && $button.css('font-style', 'italic');
      });
      jQuery('.acym__wysid__context__button__align').each(function () {
        jQuery(this).css('background-color', 'acym__wysid__context__button__align__' + $button.closest('div').css('text-align') === jQuery(this).attr('id') ? '' : 'inherit');
        jQuery(this).off('click').on('click', function () {
          $button.closest('div').css('text-align', jQuery(this).attr('data-align'));
          jQuery('.acym__wysid__context__button__align').css('background-color', 'inherit');
          jQuery(this).css('background-color', '');
        });
      });
      jQuery('.acym__button__padding__input').each(function () {
        jQuery(this).val($button.css(jQuery(this).attr('name')).replace(/[^-\d\.]/g, ''));
        jQuery(this).off('change').on('change', function () {
          $button.css(jQuery(this).attr('name'), jQuery(this).val() + 'px');
        });
      });

      if (ACYM_IS_ADMIN) {
        jQuery('#acym__wysid__context__button__font-family').select2({
          theme: 'foundation',
          width: '40%'
        });
        jQuery('#acym__wysid__context__button__font-size').select2({
          theme: 'foundation',
          width: '15%',
          minimumResultsForSearch: Infinity
        });
        jQuery('#acym__wysid__context__button__border-width').select2({
          theme: 'foundation',
          width: '15%',
          minimumResultsForSearch: Infinity
        });
        jQuery('#acym__wysid__context__button__border-radius').select2({
          theme: 'foundation',
          width: '15%',
          minimumResultsForSearch: Infinity
        });
      }

      $contextBtn.find('.switch-input').off('change');

      if (document.getElementsByClassName('acym__wysid__column__element__button--focus')[0].style.width === '100%' && !$contextBtn.find('.switch-input').is(':checked') || document.getElementsByClassName('acym__wysid__column__element__button--focus')[0].style.width !== '100%' && $contextBtn.find('.switch-input').is(':checked')) {
        $contextBtn.find('.switch-paddle').click();
      }

      var $sliders = $contextBtn.find('.slider-handle');
      $sliders.each(function () {
        var cssRule, value, percentage;

        if ('slider__output__button__width' === jQuery(this).attr('aria-controls')) {
          cssRule = 'left';
          value = $button.css('padding-right').replace(/[^-\d\.]/g, '');
          percentage = value * 90 / 100;
          jQuery(this).next().css('width', value + '%');
        } else {
          cssRule = 'top';
          value = $button.css('padding-top').replace(/[^-\d\.]/g, '');
          percentage = value * 77 / 100;
          jQuery(this).next().css('height', value + '%');
        }

        jQuery(this).css(cssRule, percentage + '%');
        jQuery('#' + jQuery(this).attr('aria-controls')).val(value);
      });
      $contextBtn.find('.switch-input').off('change').on('change', function () {
        var toggle, padding;

        if (jQuery(this).is(':checked')) {
          toggle = '100%';
          padding = '0';
        } else {
          toggle = 'auto';
          padding = jQuery('#slider__output__button__width').val() + 'px';
        }

        $button.css({
          'width': toggle,
          'padding-right': padding,
          'padding-left': padding
        });
      });
      jQuery('.acym__wysid__context__button__slider').off('moved.zf.slider').on('moved.zf.slider', function () {
        var value = jQuery('#' + jQuery(this).attr('data-output')).val();
        var cssRules = 'slider__output__button__width' !== jQuery(this).attr('data-output') ? {
          'padding-top': value + 'px',
          'padding-bottom': value + 'px'
        } : {
          'padding-right': value + 'px',
          'padding-left': value + 'px'
        };
        $button.css(cssRules);
      });
      acym_editorWysidContextModal.showContextModal($contextBtn);
      acym_helperTooltip.setTooltip();
      $contextBtn.off('mousedown').on('mousedown', function (event) {
        jQuery('.sp-container').addClass('sp-hidden').attr('style', '');
        event.stopPropagation();
      });
      jQuery(window).on('mousedown', function (event) {
        if (jQuery('.sp-container').is(':visible') || acym_editorWysidContextModal.clickedOnScrollbar(event.clientX, $contextBtn)) return;
        jQuery(this).off('mousedown');
        acym_editorWysidContextModal.hideContextModal($contextBtn, jQuery(event.target));
        jQuery(window).unbind('click');
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidVersioning.setUndoAndAutoSave();
      });
    });
  },
  setSpaceContextModalWYSID: function setSpaceContextModalWYSID() {
    jQuery('.acy-editor__space').off('click').on('click', function (event) {
      event.stopPropagation();
      jQuery('.acym__context__color__picker').remove();
      var $space = jQuery(this);
      var $contextSpace = jQuery('#acym__wysid__context__space');
      var $slideHandler = $contextSpace.find('.slider-handle');
      acym_editorWysidContextModal.showContextModal($contextSpace);
      var $tdParent = $space.closest('.acym__wysid__column__element__td');
      var heightSpace = $tdParent.css('height').replace(/[^-\d\.]/g, '');
      $space.css('height', '100%');
      $tdParent.css('height', heightSpace + 'px');
      $slideHandler.css('left', heightSpace + '%');
      $contextSpace.find('.slider-fill').css('width', heightSpace + '%');
      jQuery('#sliderOutput1').val(heightSpace);
      var $sliderSpace = jQuery('#acym__wysid__context__space__slider');
      $sliderSpace.off('moved.zf.slider').on('moved.zf.slider', function () {
        $tdParent.css('height', jQuery('#sliderOutput1').val() + 'px');
      });
      $sliderSpace.off('changed.zf.slider').on('changed.zf.slider', function () {
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
      });
      $contextSpace.off('mousedown').on('mousedown', function (event) {
        $tdParent.css('height', jQuery('#sliderOutput1').val() + 'px');
        event.stopPropagation();
      });
      jQuery(window).on('mousedown', function (event) {
        if (acym_editorWysidContextModal.clickedOnScrollbar(event.clientX, $contextSpace)) return true;
        $tdParent.css('height', jQuery('#sliderOutput1').val() + 'px');
        jQuery(this).off('mousedown');
        acym_editorWysidContextModal.hideContextModal($contextSpace, jQuery(event.target));
        jQuery(window).unbind('click');
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidVersioning.setUndoAndAutoSave();
      });
    });
  },
  setFollowContextModalWYSID: function setFollowContextModalWYSID() {
    jQuery('.acym__wysid__column__element__follow').off('click').on('click', function (e) {
      e.stopPropagation();
      jQuery('.acym__wysid__column__element__follow--focus').removeClass('acym__wysid__column__element__follow--focus');
      jQuery(this).addClass('acym__wysid__column__element__follow--focus');
      jQuery('#acym__wysid__context__follow__list').empty();
      jQuery('#acym__wysid__context__follow__select').html('<option></option>');
      var firstSocial = jQuery('.acym__wysid__column__element__follow--focus img').eq(0);
      var contextWidth;

      if (firstSocial.length) {
        var firstWidth = firstSocial.css('width').replace(/[^-\d\.]/g, '');

        if (firstWidth <= 80) {
          if (firstWidth >= 30) {
            contextWidth = firstWidth;
          } else {
            contextWidth = 30;
          }
        } else {
          contextWidth = 80;
        }
      } else {
        contextWidth = 40;
      }

      jQuery('#acym__wysid__context__social__width').val(contextWidth);
      var socialNetworks = acym_helper.parseJson(ACYM_SOCIAL_MEDIA);
      var $selectSocialSelect = jQuery('#acym__wysid__context__follow__select');

      var _loop = function _loop(i, l) {
        var found = 0;
        jQuery('.acym__wysid__column__element__follow--focus a').each(function () {
          if (jQuery(this).attr('class').indexOf(socialNetworks[i]) !== -1) {
            var currentSocialNetwork = socialNetworks[i];
            found = 1;
            var content = '<div class="grid-x small-12 cell acym__wysid__context__follow__list__item">';
            content += '<div class="small-3 cell">';
            content += '<img style="height: auto;  box-sizing: border-box; width: 42px; padding: 5px; margin-left: 5px" src="' + acym_helperEditorWysid.socialMedia[currentSocialNetwork].src + '" alt="">';
            content += '</div>';
            content += '<div class="small-7 cell">';
            content += '<div class="input-group small-12 cell">';
            content += '<input class="input-group-field acym__wysid__context__button__link acym__wysid__context__button__link--' + currentSocialNetwork + '" type="text" placeholder="https://" value="' + jQuery(this).attr('href') + '">';
            content += '</div>';
            content += '</div>';
            content += '<div class="auto cell">';
            content += '<p class="acym__wysid__context__follow__list__remove acym__wysid__context__follow__list__remove--' + currentSocialNetwork + '" aria-hidden="true">×</p>';
            content += '</div>';
            content += '</div>';
            jQuery('#acym__wysid__context__follow__list').append(content);
            jQuery('.acym__wysid__context__follow__list__remove--' + currentSocialNetwork).off('click').on('click', function () {
              var $elementFollow = jQuery('.acym__wysid__column__element__follow--focus');
              $elementFollow.find('.acym__wysid__column__element__follow__' + currentSocialNetwork).remove();
              jQuery(this).closest('.acym__wysid__context__follow__list__item').remove();
              acym_editorWysidContextModal.setFollowContextModalWYSID();
              $elementFollow.click();
            });
            jQuery('.acym__wysid__context__button__link--' + currentSocialNetwork).off('change paste keyup').on('change paste keyupe', function () {
              jQuery('.acym__wysid__column__element__follow--focus').find('.acym__wysid__column__element__follow__' + currentSocialNetwork).attr('href', jQuery(this).val());
            });
          }
        });

        if (found == 0) {
          $selectSocialSelect.append(new Option(ACYM_IS_ADMIN ? '' : socialNetworks[i], socialNetworks[i], false, false)).trigger('change');
        }
      };

      for (var i = 0, l = socialNetworks.length; i < l; i++) {
        _loop(i, l);
      }

      var $follow = jQuery(this);
      var width = $follow.innerWidth();
      var $contextFollow = jQuery('#acym__wysid__context__follow');
      jQuery('.acym__wysid__context__follow__align').each(function () {
        jQuery(this).css('background-color', 'acym__wysid__context__follow__align__' + $follow.css('text-align') === jQuery(this).attr('id') ? '' : 'inherit');
        jQuery(this).off('click').on('click', function () {
          var alignement = jQuery(this).attr('data-align');
          $follow.css('text-align', alignement);

          if (alignement === 'center') {
            $follow.find('img').removeAttr('align').removeAttr('hspace');
          } else {
            $follow.find('img').attr('align', alignement).attr('hspace', '3');
          }

          jQuery('.acym__wysid__context__follow__align').css('background-color', 'inherit');
          jQuery(this).css('background-color', '');
        });
      });
      acym_editorWysidContextModal.showContextModal($contextFollow);

      if (ACYM_IS_ADMIN) {
        $selectSocialSelect.select2({
          theme: 'foundation',
          minimumResultsForSearch: -1,
          placeholder: '+',
          selectOnClose: false,
          closeOnSelect: true,
          width: '50px',
          templateResult: acym_editorWysidContextModal.getFollowDataFormatWYSID,
          templateSelection: acym_editorWysidContextModal.getFollowDataFormatWYSID
        });
        $selectSocialSelect.off('select2:select').on('select2:select', function (e) {
          var selectedNetwork = e.params.data.id;
          acym_editorWysidContextModal.addContentFollowContext(jQuery('.acym__wysid__column__element__follow--focus'), selectedNetwork);
        });
      } else {
        $selectSocialSelect.off('change').on('change', function () {
          acym_editorWysidContextModal.addContentFollowContext(jQuery('.acym__wysid__column__element__follow--focus'), jQuery(this).val());
        });
      }

      $contextFollow.off('mousedown').on('mousedown', function (event) {
        event.stopPropagation();
      });
      jQuery(window).on('mousedown', function (event) {
        if (acym_editorWysidContextModal.clickedOnScrollbar(event.clientX, $contextFollow)) return true;
        jQuery(this).off('mousedown');
        acym_editorWysidContextModal.hideContextModal($contextFollow, jQuery(event.target));
        jQuery(window).unbind('click');
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidVersioning.setUndoAndAutoSave();
      });
      jQuery('#acym__wysid__context__social__width__slider').off('moved.zf.slider').on('moved.zf.slider', function () {
        width = jQuery('#acym__wysid__context__social__width').val() <= 80 ? jQuery('#acym__wysid__context__social__width').val() >= 30 ? jQuery('#acym__wysid__context__social__width').val() : 30 : 80;
        jQuery('.acym__wysid__column__element__follow--focus img').css('width', width).attr('width', width);
      });
    });
    jQuery('.acym__wysid__column__element__follow a').unbind('click').click(function (event) {
      event.preventDefault();
    });
  },
  getFollowDataFormatWYSID: function getFollowDataFormatWYSID(data) {
    if (!data.id) {
      return data.text;
    }

    return jQuery('<span><img src="' + acym_helperEditorWysid.socialMedia[data.element.value.toLowerCase()].src + '"/>' + data.text + '</span>');
  },
  addContentFollowContext: function addContentFollowContext($followContainer, selectedNetwork) {
    if ('' === selectedNetwork) return;
    var $contextSocial = jQuery('#acym__wysid__context__social__width');
    var width = $contextSocial.val() <= 80 ? $contextSocial.val() >= 30 ? $contextSocial.val() : 30 : 80;
    var content = '<a class="acym__wysid__column__element__follow__' + selectedNetwork + '" href="">';
    content += '<img style="display: inline-block; max-width: 100%; height: auto; box-sizing: border-box; width: ' + width + 'px; padding: 3px;" src="' + acym_helperEditorWysid.socialMedia[selectedNetwork].src + '" width="' + width + '" alt="' + selectedNetwork + '">';
    content += '</a>';
    $followContainer.append(content);
    acym_editorWysidContextModal.setFollowContextModalWYSID();
    $followContainer.click();
  },
  setSeparatorContextModalWYSID: function setSeparatorContextModalWYSID() {
    jQuery('.acym__wysid__column__element__separator').off('click').on('click', function (e) {
      e.stopPropagation();
      jQuery('.acym__context__color__picker').remove(); //We get the hr to change

      var $hr = jQuery(this).find('hr:first');
      jQuery('#sliderOutput2').val($hr.css('border-bottom-width').replace(/[^-\d\.]/g, ''));
      var leftSlider2 = $hr.css('border-bottom-width').replace(/[^-\d\.]/g, '') + '%';
      jQuery('[aria-controls="sliderOutput2"]').css('left', leftSlider2).next().css('width', leftSlider2);
      var leftSlider3 = Math.round($hr.width() * 100 / $hr.parent().width());
      jQuery('#sliderOutput3').val(leftSlider3);
      leftSlider3 += '%';
      jQuery('[aria-controls="sliderOutput3"]').css('left', leftSlider3).next().css('width', leftSlider3);
      var leftSlider4 = $hr.css('margin-top').replace(/[^-\d\.]/g, '');
      leftSlider4 = parseInt(leftSlider4) * 100 / 50 + '%';
      jQuery('#sliderOutput4').val($hr.css('margin-top').replace(/[^-\d\.]/g, ''));
      jQuery('[aria-controls="sliderOutput4"]').css('left', leftSlider4).next().css('width', leftSlider4); //We set the colors picker of the separator

      acym_editorWysidColorPicker.setColorPickerForContextModal(jQuery('#acym__wysid__context__separator__color'), 'border-bottom-color', $hr, $hr, 'border-bottom-color');
      var $allType = jQuery('.acym__wysid__context__separator__kind');
      $allType.removeClass('separator-selected');
      $allType.each(function () {
        if (jQuery(this).find('hr').attr('data-kind') == $hr.css('border-bottom-style')) {
          jQuery(this).addClass('separator-selected');
        }
      });
      $allType.off('click').on('click', function () {
        $allType.removeClass('separator-selected');
        jQuery(this).addClass('separator-selected');
        $hr.css('border-bottom-style', jQuery(this).find('hr').attr('data-kind'));
      });
      var $slider = jQuery('#acym__wysid__context__separator__slide');
      var $sliderWidth = jQuery('#acym__wysid__context__separator__slide__width');
      var $sliderSpace = jQuery('#acym__wysid__context__separator__slide__space');
      $slider.off('moved.zf.slider').on('moved.zf.slider', function () {
        if ($slider.css('display') !== 'none') {
          $hr.css('border-bottom-width', jQuery('#sliderOutput2').val() + 'px');
        }
      });
      $sliderWidth.off('moved.zf.slider').on('moved.zf.slider', function () {
        if ($slider.css('display') !== 'none') {
          $hr.css('width', jQuery('#sliderOutput3').val() + '%');
        }
      });
      $sliderSpace.off('moved.zf.slider').on('moved.zf.slider', function () {
        if ($slider.css('display') !== 'none') {
          var $spaceVal = jQuery('#sliderOutput4').val();
          $hr.css('margin-top', $spaceVal + 'px');
          $hr.css('margin-bottom', $spaceVal + 'px');
        }
      });
      var $contextSeparator = jQuery('#acym__wysid__context__separator');
      acym_editorWysidContextModal.showContextModal($contextSeparator);
      $contextSeparator.off('mousedown').on('mousedown', function (event) {
        jQuery('.sp-container').addClass('sp-hidden').attr('style', '');
        event.stopPropagation();
      });
      jQuery(window).on('mousedown', function (event) {
        if (jQuery('.sp-container').is(':visible') || acym_editorWysidContextModal.clickedOnScrollbar(event.clientX, $contextSeparator)) return;
        jQuery(this).off('mousedown');
        acym_editorWysidContextModal.hideContextModal($contextSeparator, jQuery(event.target));
        jQuery(window).off('click');
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidVersioning.setUndoAndAutoSave();
      });
    });
  }
}; // setShareContextModalWYSID: function () {
//     jQuery('.acym__wysid__column__element__share').off('click').on('click', function (e) {
//         e.stopPropagation();
//         jQuery('.acym__context__color__picker').remove();
//
//         jQuery('.acym__wysid__column__element__share--focus').removeClass('acym__wysid__column__element__share--focus');
//         jQuery(this).addClass('acym__wysid__column__element__share--focus');
//         jQuery('#acym__wysid__context__share__list').empty();
//         jQuery('#acym__wysid__context__share__select').html('<option></option>');
//
//         let firstSocial = jQuery('.acym__wysid__column__element__share--focus span').eq(0);
//         let widthInputShare = jQuery('#acym__wysid__context__social__share__width');
//         widthInputShare.attr('value', firstSocial.length ? firstSocial.css('font-size').replace(/[^-\d\.]/g, '') <= 40 ? firstSocial.css('font-size').replace(/[^-\d\.]/g, '') >= 15 ? firstSocial.eq(0).css('font-size').replace(/[^-\d\.]/g, '') : 15 : 40 : 20);
//         jQuery('.acym__wysid__column__element__share--focus .acym__wysid__column__element__share__social span').css('font-size', widthInputShare.attr('value') + 'px');
//         jQuery('.acym__wysid__column__element__share--focus .acym__wysid__column__element__share__social img').css('width', (parseInt(widthInputShare.attr('value')) + 15) + 'px');
//
//         let socialNetworks = [
//             'facebook',
//             'twitter',
//             'linkedin',
//             'pinterest',
//         ];
//         let socialNetworksAlreadyPut = [];
//
//         for (let i = 0, l = socialNetworks.length ; i < l ; i++) {
//             let found = 0;
//             jQuery('.acym__wysid__column__element__share--focus .acym__wysid__column__element__share__social').each(function (index) {
//                 if (jQuery(this).attr('class').indexOf(socialNetworks[i]) != -1) {
//                     let currentSocialNetwork = socialNetworks[i];
//                     found = 1;
//
//                     let content = '<div id="acym__wysid__context__share__list__item" class="grid-x small-12 cell">';
//                     content += '<div class="small-2 cell acym__wysid__context__share__list__item__' + currentSocialNetwork + '">';
//                     content += '<img style="width: 35px;display: inline; margin-left: 10px;" src="' + socialMedia[currentSocialNetwork].src + '" alt="' + socialMedia[currentSocialNetwork].src + '"/>';
//                     content += '</div>';
//                     content += '<div class="small-8 cell">';
//                     content += '<div class="input-group small-12 cell">';
//                     content += '<input maxlength="15" id="acym__wysid__context__button__link" class="input-group-field acym__wysid__context__button__link--' + currentSocialNetwork + '" type="text" value="' + jQuery(this).children('span').html() + '">';
//                     content += '</div>';
//                     content += '</div>';
//                     content += '<div class="auto cell">';
//                     content += '<p class="acym__wysid__context__share__list__remove acym__wysid__context__share__list__remove--' + currentSocialNetwork + '" aria-hidden="true">×</p>';
//                     content += '</div>';
//                     content += '</div>';
//                     jQuery('#acym__wysid__context__share__list').append(content);
//                     jQuery('.acym__wysid__context__share__list__remove--' + currentSocialNetwork).off('click').on('click', function () {
//                         let currentSocialNetworkToRemove = currentSocialNetwork;
//                         jQuery('.acym__wysid__column__element__share--focus').find('.acym__wysid__column__element__share__' + currentSocialNetworkToRemove).remove();
//                         setShareContextModalWYSID();
//                         jQuery('.acym__wysid__column__element__share--focus').click();
//                     });
//
//                     jQuery('.acym__wysid__context__button__link--' + currentSocialNetwork).off('change paste keyup').on('change paste keyup', function () {
//                         let currentSocialNetworkChange = currentSocialNetwork;
//                         jQuery(this).val().length > 15 ? jQuery(this).val(jQuery(this).val().substr(0, 15)) : jQuery('.acym__wysid__column__element__share--focus .acym__wysid__column__element__share__' + currentSocialNetworkChange + ' span').html(jQuery(this).val());
//                     });
//                 }
//             });
//             if (found == 0) {
//                 jQuery('#acym__wysid__context__share__select').append(new Option('', socialNetworks[i], false, false)).trigger('change');
//             }
//         }
//
//         jQuery('.acym__wysid__column__element__share__social').off('click').on('click', function (e) {
//             e.preventDefault();
//         });
//
//         let share = jQuery(this).parent();
//         let offset = share.offset();
//         let height = share.innerHeight();
//         let width = share.innerWidth();
//         let contextShare = jQuery('#acym__wysid__context__share');
//         let modalHeight = contextShare.innerHeight();
//         let wpAdminBar = jQuery('#wpadminbar').innerHeight() + 5;
//         let jAdminBar = jQuery('nav.navbar').innerHeight() + 5;
//         let windowWidth = jQuery(window).width();
//
//         let top = ((offset.top - modalHeight) < wpAdminBar + jAdminBar) ? offset.top + height - wpAdminBar + 5 : offset.top - wpAdminBar - modalHeight;
//
//         contextShare.css({
//             display: 'inherit',
//             top: top,
//             left: windowWidth > 800 ? (((offset.left - (jQuery('#adminmenuback').innerWidth())) + (width / 2)) - (contextShare.innerWidth() / 2)) : ((offset.left + (width / 2)) - (contextShare.innerWidth() / 2)),
//         });
//
//
//         jQuery('#acym__wysid__context__share__select').select2({
//             minimumResultsForSearch: -1,
//             placeholder: '+',
//             selectOnClose: false,
//             closeOnSelect: true,
//             templateResult: shareFormatDataWYSID,
//             templateSelection: shareFormatDataWYSID,
//         });
//
//         contextShare.unbind('click').click(function (event) {
//             event.stopPropagation();
//         });
//         jQuery(window).click(function () {
//             contextShare.css({display: 'none'});
//             jQuery(window).unbind('click');
//         });
//         jQuery('#acym__wysid__context__share__select').off('select2:select').on('select2:select', function (e) {
//             let selectedNetwork = e.params.data.id;
//
//             socialNetworksAlreadyPut.push(selectedNetwork);
//             let content = '<a style="display: inline-block" class="acym__wysid__column__element__share__social acym__wysid__column__element__share__' + selectedNetwork + '" href="' + socialMedia[selectedNetwork].link + '">';
//             content += '<img style="vertical-align: middle; width: 30px; display: inline; margin-right: 5px;" src="' + socialMedia[selectedNetwork].src + '" alt="' + socialMedia[selectedNetwork].src + '">';
//             content += '<span style="color: #303e46; vertical-align: middle; margin-right: 10px; font-size: 15px">' + socialMedia[selectedNetwork].text + '</span>';
//             content += '</a>';
//             jQuery('.acym__wysid__column__element__share--focus').append(content);
//             let widthShare = widthInputShare.val() <= 40 ? widthInputShare.val() >= 15 ? widthInputShare.val() : 15 : 40;
//             jQuery('.acym__wysid__column__element__share--focus .acym__wysid__column__element__share__social span').css('font-size', widthShare + 'px');
//             jQuery('.acym__wysid__column__element__share--focus .acym__wysid__column__element__share__social img').css('width', (parseInt(widthShare) + 15) + 'px');
//             setShareContextModalWYSID();
//             jQuery('.acym__wysid__column__element__share--focus').click();
//         });
//         widthInputShare.off('change').on('change', function () {
//             let widthShare = widthInputShare.val() <= 40 ? widthInputShare.val() >= 15 ? widthInputShare.val() : 15 : 40;
//             jQuery('.acym__wysid__column__element__share--focus .acym__wysid__column__element__share__social span').css('font-size', widthShare + 'px');
//             jQuery('.acym__wysid__column__element__share--focus .acym__wysid__column__element__share__social img').css('width', (parseInt(widthShare) + 15) + 'px');
//         });
//     });
//     jQuery('.acym__wysid__column__element__share__social').off('click').on('click', function (e) {
//         e.preventDefault();
//     });
// }

var acym_editorWysidDragDrop = {
  setNewRowElementDraggableWYSID: function setNewRowElementDraggableWYSID() {
    jQuery('.acym__wysid__row__element--new').draggable({
      cursor: 'move',
      //Cursor appearance during drag
      helper: 'clone',
      //Clone the element that has been dragged instead of directly dragging it
      cursorAt: {
        top: 12,
        left: 40
      },
      //Cursor position when you start to drag an element
      connectToSortable104: '.acym__wysid__row',
      //Allows the drag element to be dropped onto this sortables
      revert: function revert(isValidDrop) {
        //If you drop an element on an invalid position, it returns to its first place with an animation.
        if (!isValidDrop) {
          acym_editorWysidRowSelector.setRowSelector();
          return true;
        }
      },
      revertDuration: 300,
      start: function start(event, ui) {
        jQuery(ui.helper).css({
          'width': jQuery(this).width() + 'px',
          'opacity': 1
        });
        jQuery('.acym__wysid__column__element').off('mouseenter mouseleave');
        jQuery('.acym__wysid__row__element').off('mouseenter mouseleave');
      }
    });
  },
  setRowElementSortableWYSID: function setRowElementSortableWYSID() {
    jQuery('.acym__wysid__row').sortable({
      axis: 'y',
      //If defined, the items can be dragged only horizontally or vertically
      cursorAt: {
        top: 20
      },
      //Cursor position when you start to drag an element
      scroll: false,
      //If set to true, the page scrolls when coming to an edge
      placeholder: 'acym__wysid__row__element--placeholder',
      //A class name that gets applied to the otherwise white space
      handle: '.acym__wysid__row__element__toolbox__move',
      //Restricts sort start click to this element
      forcePlaceholderSize: true,
      //Forces the placeholder to have a size
      tolerance: 'intersect',
      //Specifies which mode to use for testing whether the item being moved is hovering over another item
      start: function start(event, ui) {
        jQuery('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
        ui.helper.first().addClass('acym__wysid__row__element--sortable');
        jQuery(ui.placeholder).css({
          'height': '75px'
        });
        jQuery('.acym__wysid__column__element').off('mouseenter mouseleave');
        jQuery('.acym__wysid__row__element').off('mouseenter mouseleave');
      },
      stop: function stop(event, ui) {
        jQuery('.acym__wysid__row__element--sortable').removeClass('acym__wysid__row__element--sortable'); //Test the item that was dropped for replace it with the desired content

        var $item = ui.item;
        $item.hasClass('acym__wysid__row__element--new--1') ? acym_editorWysidNewRow.addRow1WYSID($item) : $item.hasClass('acym__wysid__row__element--new--2') ? acym_editorWysidNewRow.addRow2WYSID($item) : $item.hasClass('acym__wysid__row__element--new--3') ? acym_editorWysidNewRow.addRow3WYSID($item) : $item.hasClass('acym__wysid__row__element--new--4') ? acym_editorWysidNewRow.addRow4WYSID($item) : $item.hasClass('acym__wysid__row__element--new--5') ? acym_editorWysidNewRow.addRow5WYSID($item) : $item.hasClass('acym__wysid__row__element--new--6') ? acym_editorWysidNewRow.addRow6WYSID($item) : true;
        acym_editorWysidDragDrop.setColumnSortableWYSID();
        acym_helperEditorWysid.checkForEmptyTbodyWYSID();
        acym_editorWysidRowSelector.setRowSelector();
      }
    });
  },
  setColumnElementDraggableWYSID: function setColumnElementDraggableWYSID() {
    jQuery('.acym__wysid__column__element').draggable({
      cursor: 'move',
      //Cursor appearance during drag*/
      helper: 'clone',
      //Clone the element that has been dragged instead of directly dragging it
      revert: 'invalid',
      //If you drop an element on an invalid position, it returns to its first place with an animation
      handle: '.acym__wysid__column__element__toolbox__move',
      //Restricts sort start click to this element
      cursorAt: {
        top: 20,
        left: 50
      },
      //Cursor position when you start to drag an element
      connectToSortable104: '.acym__wysid__column tbody',
      //Allows the drag element to be dropped onto this sortables
      revertDuration: 300,
      start: function start(event, ui) {
        ui.helper.first().addClass('acym__wysid__column__element--helper');
        jQuery(this).addClass('acym__wysid__column__element__original--helper');
        jQuery('.acym__wysid__column').addClass('acym__wysid__column--drag-start');
      },
      stop: function stop() {
        jQuery('.acym__wysid__column__element--helper').removeClass('acym__wysid__column__element--helper');
        jQuery('.acym__wysid__column__element__original--helper').removeClass('acym__wysid__column__element__original--helper');
        jQuery('.acym__wysid__column').removeClass('acym__wysid__column--drag-start');
        jQuery('.acym__wysid__column__element').css({
          'position': 'relative',
          'top': 'inherit',
          'left': 'inherit',
          'right': 'inherit',
          'bottom': 'inherit',
          'height': 'auto'
        });
        acym_editorWysidRowSelector.setRowSelector();
      }
    });
  },
  setColumnSortableWYSID: function setColumnSortableWYSID() {
    jQuery('.acym__wysid__column tbody').sortable({
      scroll: false,
      //If set to true, the page scrolls when coming to an edge
      handle: '.acym__wysid__column__element__toolbox__move',
      //Restricts sort start click to this element
      placeholder: 'acym__wysid__column__element--placeholder',
      //A class name that gets applied to the otherwise white space
      forcePlaceholderSize: true,
      //Forces the placeholder to have a size
      cursorAt: {
        top: 20,
        left: 50
      },
      //Cursor position when you start to drag an element
      stop: function stop(event, ui) {
        var $defaultStart = jQuery('#acym__wysid__default');
        $defaultStart.closest('.columns').height('auto').find('table').height('auto').find('tbody').height('auto');
        $defaultStart.remove();
        jQuery('.acym__wysid__column__first').removeClass('acym__wysid__column__first'); //Check the item that was dropped

        var $item = ui.item;
        var plugin = $item.attr('data-plugin');

        if (plugin) {
          acym_helperEditorWysid.$focusElement = jQuery($item);
          acym_editorWysidDynammic.openDContentModal(plugin, acym_helperEditorWysid.$focusElement.attr('data-dynamic'));
        } else {
          if ($item.hasClass('acym__wysid__column__element--new--title')) {
            acym_editorWysidNewContent.addTitleWYSID($item);
          } else if ($item.hasClass('acym__wysid__column__element--new--text')) {
            acym_editorWysidNewContent.addTextWYSID($item);
          } else if ($item.hasClass('acym__wysid__column__element--new--picture')) {
            acym_editorWysidNewContent.addMediaWysid($item);
          } else if ($item.hasClass('acym__wysid__column__element--new--button')) {
            acym_editorWysidNewContent.addButtonWYSID($item);
          } else if ($item.hasClass('acym__wysid__column__element--new--follow')) {
            acym_editorWysidNewContent.addFollowWYSID($item);
          } else if ($item.hasClass('acym__wysid__column__element--new--share')) {
            acym_editorWysidNewContent.addShareWYSID($item);
          } else if ($item.hasClass('acym__wysid__column__element--new--space')) {
            acym_editorWysidNewContent.addSpaceWYSID($item);
          } else if ($item.hasClass('acym__wysid__column__element--new--video')) {
            acym_editorWysidNewContent.addVideoWYSID($item);
          } else if ($item.hasClass('acym__wysid__column__element--new--separator')) {
            acym_editorWysidNewContent.addSeparatorWysid($item);
          } else if ($item.hasClass('acym__wysid__column__element--new--giphy')) {
            acym_editorWysidNewContent.addGiphyWYSID($item);
          }
        }
      },
      change: function change() {
        acym_helperEditorWysid.checkForEmptyTbodyWYSID();
      },
      out: function out() {
        setTimeout(function () {
          acym_helperEditorWysid.checkForEmptyTbodyWYSID();
        }, 1);
      },
      receive: function receive(event, ui) {
        if (!ui.item.hasClass('acym__wysid__column__element--new')) {
          //remove original item
          ui.item.remove();
          acym_helperEditorWysid.setColumnRefreshUiWYSID();
          acym_editorWysidVersioning.setUndoAndAutoSave();
        }
      },
      start: function start() {
        jQuery('.acym__wysid__column__element--placeholder').html('');
        jQuery('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
      }
    });
  },
  setNewColumnElementDraggableWYSID: function setNewColumnElementDraggableWYSID() {
    var startHeight = 0;
    jQuery('.acym__wysid__column__element--new').draggable({
      cursor: 'move',
      //Cursor appearance during drag
      helper: 'clone',
      //Clone the element that has been dragged instead of directly dragging it
      cursorAt: {
        top: 12,
        left: 40
      },
      //Cursor position when you start to drag an element
      //appendTo: 'body', //Which element the draggable helper should be appended to while dragging
      connectToSortable104: '.acym__wysid__column > tbody',
      //Allows the drag element to be dropped onto this sortable
      revert: function revert(isValidDrop) {
        //If you drop an element on an invalid position, it returns to its first place with an animation.
        if (!isValidDrop) {
          acym_editorWysidRowSelector.setRowSelector();
          return true;
        }
      },
      revertDuration: 300,
      start: function start(event, ui) {
        jQuery(ui.helper).css({
          'width': jQuery(this).width() + 'px',
          'opacity': 1
        });
        jQuery('.acym__wysid__column').addClass('acym__wysid__column--drag-start');
        jQuery('.acym__wysid__column__element').off('mouseenter mouseleave');
        jQuery('.acym__wysid__row__element').off('mouseenter mouseleave');

        if (jQuery('#acym__wysid__default').length) {
          jQuery('#acym__wysid__default__start').hide();
          var $startDragging = jQuery('#acym__wysid__default__dragging');
          startHeight = $startDragging.closest('.columns').height();
          $startDragging.show();
          $startDragging.closest('#acym__wysid__default').attr('height', 'auto').closest('.columns').height($startDragging.height()).find('table').height($startDragging.height()).find('tbody').height($startDragging.height());
        }
      },
      stop: function stop() {
        jQuery('.acym__wysid__column').removeClass('acym__wysid__column--drag-start');
        var $default = jQuery('#acym__wysid__default');

        if ($default.length > 0) {
          $default.find('#acym__wysid__default__start').show();
          $default.find('#acym__wysid__default__dragging').hide();
          var $startDefault = jQuery('#acym__wysid__default__start');
          $startDefault.closest('#acym__wysid__default').attr('height', 'auto').closest('.columns').height($startDefault.height()).find('table').height($startDefault.height()).find('tbody').height($startDefault.height());
        }
      }
    });
  },
  setFixJquerySortableWYSID: function setFixJquerySortableWYSID() {
    jQuery.ui.plugin.add('draggable', 'connectToSortable104', {
      start: function start(event, ui, draggable) {
        var inst = jQuery(this).data('ui-draggable'),
            o = inst.options,
            uiSortable = jQuery.extend({}, ui, {
          item: inst.element
        });
        inst.sortables = [];
        jQuery(draggable.options.connectToSortable104).each(function () {
          var sortable = jQuery(this).sortable('instance');

          if (sortable && !sortable.options.disabled) {
            inst.sortables.push({
              instance: sortable,
              shouldRevert: sortable.options.revert
            }); // Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag
            // and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).

            sortable.refreshPositions();

            sortable._trigger('activate', event, uiSortable);
          }
        });
      },
      stop: function stop(event, ui, draggable) {
        //If we are still over the sortable, we fake the stop event of the sortable, but also remove helper
        var inst = jQuery(this).data('ui-draggable'),
            uiSortable = jQuery.extend({}, ui, {
          item: inst.element
        });
        jQuery.each(inst.sortables, function () {
          if (this.instance.isOver) {
            this.instance.isOver = 0; // Don't remove the helper in the draggable instance

            inst.cancelHelperRemoval = true; // Remove it in the sortable instance (so sortable plugins like revert still work)

            this.instance.cancelHelperRemoval = false; // The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: "valid/invalid"

            if (this.shouldRevert) {
              this.instance.options.revert = this.shouldRevert;
            } // Trigger the stop of the sortable


            this.instance._mouseStop(event);

            this.instance.options.helper = this.instance.options._helper; // If the helper has been the original item, restore properties in the sortable

            if (inst.options.helper === 'original') {
              this.instance.currentItem.css({
                top: 'auto',
                left: 'auto'
              });
            }
          } else {
            // Remove the helper in the sortable instance
            this.instance.cancelHelperRemoval = false;

            this.instance._trigger('deactivate', event, uiSortable);
          }
        });
      },
      drag: function drag(event, ui, draggable) {
        var inst = jQuery(this).data('ui-draggable'),
            that = this;
        jQuery.each(inst.sortables, function () {
          var innermostIntersecting = false,
              thisSortable = this; //Copy over some variables to allow calling the sortable's native _intersectsWith

          this.instance.positionAbs = inst.positionAbs;
          this.instance.helperProportions = inst.helperProportions;
          this.instance.offset.click = inst.offset.click;

          if (this.instance._intersectsWith(this.instance.containerCache)) {
            innermostIntersecting = true;
            jQuery.each(inst.sortables, function () {
              this.instance.positionAbs = inst.positionAbs;
              this.instance.helperProportions = inst.helperProportions;
              this.instance.offset.click = inst.offset.click;

              if (this !== thisSortable && this.instance._intersectsWith(this.instance.containerCache) && jQuery.contains(thisSortable.instance.element[0], this.instance.element[0])) {
                innermostIntersecting = false;
              }

              return innermostIntersecting;
            });
          }

          if (innermostIntersecting) {
            //If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once
            if (!this.instance.isOver) {
              this.instance.isOver = 1; //Now we fake the start of dragging for the sortable instance,
              //by cloning the list group item, appending it to the sortable and using it as inst.currentItem
              //We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)

              this.instance.currentItem = jQuery(that).clone().removeAttr('id').appendTo(this.instance.element).data('ui-sortable-item', true); //Store helper option to later restore it

              this.instance.options._helper = this.instance.options.helper;

              this.instance.options.helper = function () {
                return ui.helper[0];
              };

              event.target = this.instance.currentItem[0];

              this.instance._mouseCapture(event, true);

              this.instance._mouseStart(event, true, true); //Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes


              this.instance.offset.click.top = inst.offset.click.top;
              this.instance.offset.click.left = inst.offset.click.left;
              this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;
              this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;

              inst._trigger('toSortable', event); //draggable revert needs that


              inst.dropped = this.instance.element; //hack so receive/update callbacks work (mostly)

              inst.currentItem = inst.element;
              this.instance.fromOutside = inst;
            } //Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable


            if (this.instance.currentItem) {
              this.instance._mouseDrag(event);
            }
          } else {
            //If it doesn't intersect with the sortable, and it intersected before,
            //we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval
            if (this.instance.isOver) {
              this.instance.isOver = 0;
              this.instance.cancelHelperRemoval = true; //Prevent reverting on this forced stop

              this.instance.options.revert = false; //The out event needs to be triggered independently

              this.instance._trigger('out', event, this.instance._uiHash(this.instance));

              this.instance._mouseStop(event, true);

              this.instance.options.helper = this.instance.options._helper; //Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it's original size

              this.instance.currentItem.remove();

              if (this.instance.placeholder) {
                this.instance.placeholder.remove();
              }

              inst._trigger('fromSortable', event); //draggable revert needs that


              inst.dropped = false;
            }
          }
        });
      }
    });
  }
};
var acym_editorWysidDynammic = {
  inCall: false,
  getUniqueId: function getUniqueId($focusedElement) {
    var uniqueId;

    if ($focusedElement === undefined || $focusedElement.attr('id') === undefined) {
      uniqueId = 'dynamicContent';
      var i = 0;

      while (jQuery('#' + uniqueId + i).length) {
        i++;
      }

      uniqueId += i;
    } else {
      uniqueId = $focusedElement.attr('id');
    }

    return uniqueId;
  },
  endDContentInsertion: function endDContentInsertion($focusedElement, shortcode, previewContent, plugin, initEdit) {
    var uniqueId = this.getUniqueId($focusedElement);
    shortcode = shortcode.replace(/"/g, '\\"');
    var style = 'position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;';
    var previewTooltip = '<span class="acym__tooltip acym__dynamics__preview">' + ACYM_JS_TXT.ACYM_PREVIEW;
    previewTooltip += '<span class="acym__tooltip__text wysid_tooltip">' + ACYM_JS_TXT.ACYM_PREVIEW_DESC + '</span>';
    previewTooltip += '</span>';

    if (0 === previewContent.length) {
      previewContent = '<div class="acym_default_dcontent"><span class="acym_default_dcontent_text">' + ACYM_JS_TXT.ACYM_NO_DCONTENT_TEXT + '</span></div>';
    }

    var insertedContent = '<tr id="' + uniqueId + '" class="acym__wysid__column__element ui-draggable" data-dynamic="' + shortcode + '" style="' + style + '" data-plugin="' + plugin + '">';
    insertedContent += '<td class="large-12 acym__wysid__column__element__td">' + previewTooltip;
    insertedContent += previewContent;
    insertedContent += '<div class="plugin_loader" style="display: none;"><i class="fa acymicon-spin acymicon-circle-o-notch">&zwj;</i></div>';
    insertedContent += '<i style="display: none;">&zwj;</i></td></tr>';
    $focusedElement.replaceWith(insertedContent);
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
    acym_editorWysidVersioning.setUndoAndAutoSave(initEdit);
    acym_helperTooltip.setTooltip();
    acym_helperEditorWysid.$focusElement = jQuery('#' + uniqueId);
    acym_helperEditorWysid.$focusElement.find('.plugin_loader').css('display', 'none');
  },
  insertDContent: function insertDContent(shortcode, $elementsToLoop) {
    var $focusedElement;
    var plugin;
    var initEdit = 'undefined' !== typeof $elementsToLoop;

    if (initEdit) {
      $focusedElement = jQuery($elementsToLoop.get(0));
      $elementsToLoop.splice(0, 1);
      plugin = $focusedElement.attr('data-plugin');
      shortcode = $focusedElement.attr('data-dynamic');
    } else {
      $focusedElement = acym_helperEditorWysid.$focusElement;
      plugin = jQuery('#currentPlugin').val();
    }

    if (0 === shortcode.length) {
      acym_editorWysidDynammic.endDContentInsertion($focusedElement, shortcode, '', plugin, initEdit);
      return;
    }

    acym_helperEditorWysid.dynamicPreviewIdentifier++;
    var currentPreviewIdentifier = acym_helperEditorWysid.dynamicPreviewIdentifier;
    $focusedElement.find('.plugin_loader').css('display', 'flex');
    var mailId = jQuery('input[name="editor_autoSave"]').val();
    var ajaxUrl = ACYM_AJAX_URL + '&page=acymailing_dynamics&ctrl=' + acym_helper.ctrlDynamics + '&task=replaceDummy';
    jQuery.ajax({
      url: ajaxUrl,
      type: 'POST',
      data: {
        'mailId': mailId,
        'code': shortcode,
        'language': acym_editorWysidMultilingual.currentLanguage,
        'previewBody': jQuery('#acym__wysid__template').html()
      }
    }).then(function (response) {
      // Another option has been changed, apply the newest only
      if (currentPreviewIdentifier !== acym_helperEditorWysid.dynamicPreviewIdentifier) return;
      var preview;
      if (response) response = acym_helper.parseJson(response);

      if (!response.content || 0 === response.content.length) {
        preview = '';
      } else {
        preview = response.content;
      }

      acym_editorWysidDynammic.endDContentInsertion($focusedElement, shortcode, preview, plugin, initEdit);
      if ('undefined' !== typeof $elementsToLoop && $elementsToLoop.length > 0) acym_editorWysidDynammic.insertDContent('', $elementsToLoop);
    });
  },
  openDContentModal: function openDContentModal(plugin, shortcode) {
    var $pluginsContext = jQuery('#acym__wysid__context__plugins');
    $pluginsContext.html('<i class="acymicon-circle-o-notch acymicon-spin centered_spinner text-center" style="margin-top: 2rem;"/>');
    acym_editorWysidContextModal.showContextModal($pluginsContext);
    jQuery(window).on('mousedown', function (event) {
      if (acym_editorWysidContextModal.clickedOnScrollbar(event.clientX, $pluginsContext)) return;
      var $target = jQuery(event.target);
      if ($target.closest('.c-scrim').length || $target.closest('.c-datepicker--open').length) return false;
      if ($target.closest('tr[data-plugin]').length) return false;
      jQuery(this).off('mousedown');
      acym_editorWysidContextModal.hideContextModal($pluginsContext, $target);
      jQuery(window).unbind('click');
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidVersioning.setUndoAndAutoSave();
    });

    if ('undefined' === typeof shortcode || !shortcode || !shortcode.length) {
      shortcode = '';
    }

    var ajaxURL = ACYM_AJAX_URL;
    ajaxURL += '&page=acymailing_lists';
    ajaxURL += '&action=acymailing_router';
    ajaxURL += '&noheader=1';
    ajaxURL += '&ctrl=' + acym_helper.ctrlDynamics;
    ajaxURL += '&task=trigger';
    ajaxURL += '&trigger=insertionOptions';
    ajaxURL += '&plugin=' + plugin;
    ajaxURL += '&shortcode=' + encodeURIComponent(shortcode);
    ajaxURL += '&campaignId=' + jQuery('#acym__campaign__recipients__form__campaign').val();
    var $campaignType = jQuery('[name="campaign_type"]');
    if ($campaignType.length > 0) ajaxURL += '&campaign_type=' + $campaignType.val();
    jQuery.ajax({
      url: ajaxURL,
      success: function success(data) {
        data += '<input type="hidden" id="currentPlugin" name="currentPlugin" value="' + plugin + '"/>';
        $pluginsContext.html(data);
        jQuery('#acym_pagination__ajax__load-more').val(1);
        if (ACYM_IS_ADMIN) acym_helperRadio.setRadioIconsGlobal();
        acym_editorWysidDynammic.setPluginFilters();
        acym_editorWysidDynammic.setPluginPagination(); // Reload foundation for tabs in plugins popup

        jQuery(document).foundation();
        jQuery('.reveal-overlay').not('#acym_form .reveal-overlay').appendTo('#acym__wysid__context__plugins');
        acym_editorWysidDynammic.selectFirstTab();
        acym_helperDatePicker.setDatePickerGlobal();
        acym_helperTooltip.setTooltip();
        acym_helperDatePicker.setRSDateChoice();
        acym_editorWysidToolbar.setRightToolbarWYSID();
        if (0 === shortcode.length) acym_editorWysidDynammic.insertDContent('');
        jQuery(document).trigger('acym_plugins_installed_loaded');
        acym_editorWysidDynammic.setRefreshCustomViewChanged();
      }
    });
  },
  setPluginFilters: function setPluginFilters() {
    jQuery('#plugin_listing_filters select').off('change').on('change', function () {
      acym_editorWysidDynammic.setAjaxDynamic();
    });
    jQuery('#plugin_listing_filters input[type="text"]').off('keyup').on('keyup', function () {
      jQuery('#plugin_listing').off('scroll');
      var search = jQuery(this).val();
      clearTimeout(acym_helperEditorWysid.typingTimer);

      if (search.length >= 2) {
        acym_helperEditorWysid.typingTimer = setTimeout(function () {
          acym_editorWysidDynammic.setAjaxDynamic();
        }, 1000);
      } else if (search == '') {
        acym_editorWysidDynammic.setAjaxDynamic();
      }
    });

    if (ACYM_IS_ADMIN) {
      jQuery('#acym__wysid__context__plugins select').select2({
        theme: 'foundation',
        width: '160px'
      });
    }
  },
  setAjaxDynamic: function setAjaxDynamic() {
    var _this = this;

    var loadMore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    if (this.inCall) return true;
    this.inCall = true;
    var ajaxUrl = ACYM_AJAX_URL + '&page=acymailing_dynamics&ctrl=' + acym_helper.ctrlDynamics + '&task=trigger&trigger=displayListing';
    jQuery('#plugin_listing_filters input, #plugin_listing_filters select').each(function () {
      ajaxUrl += '&' + jQuery(this).attr('name') + '=' + jQuery(this).val();
    });
    var $paginationInput = jQuery('#acym_pagination__ajax__load-more');

    if (loadMore) {
      ajaxUrl += '&loadMore=1';
    } else {
      $paginationInput.val(1);
    }

    ajaxUrl += '&pagination_page_ajax=' + $paginationInput.val();
    ajaxUrl += '&plugin=' + jQuery('input[name="plugin"]').val();

    if (typeof _selectedRows !== 'undefined') {
      var _ids = [];

      for (var key in _selectedRows) {
        if (!_selectedRows.hasOwnProperty(key)) continue;

        _ids.push(key);
      }

      ajaxUrl += '&selected=' + _ids.join(',');
    }

    jQuery.post(ajaxUrl, function (response) {
      var $pluginListing = jQuery('#plugin_listing');

      if (!loadMore) {
        $pluginListing.replaceWith(response);
      } else {
        $pluginListing.find('.acym__loader').remove();
        $pluginListing.append(response);
      }

      _this.inCall = false;
      acym_editorWysidDynammic.setPluginPagination();
    });
  },
  setPluginPagination: function setPluginPagination() {
    var $pluginListing = jQuery('#plugin_listing'); //If there is no more elements to show

    if ($pluginListing.find('.acym__listing__empty__load-more').length > 0 || $pluginListing.find('.acym__listing__empty__search__modal').length > 0) {
      return true;
    }

    $pluginListing.on('scroll', function () {
      //We subtract 80 this way the call trigger before the user touch the bottom and he have to wait less time
      var scrollToDo = jQuery(this)[0].scrollHeight - 80;
      var scrollDone = jQuery(this).height() + jQuery(this).scrollTop(); //if we reach the end we load more entities

      if (scrollDone >= scrollToDo) {
        //once it's done we remove the event listiner on the scroll to prevent calling X times the urls
        jQuery(this).off('scroll'); //We add the spinner

        jQuery(this).append('<div class="cell text-center acym__loader"><i class="acymicon-spin acymicon-circle-o-notch"></i></div>'); //We increment the pagination

        var $paginationInput = jQuery('#acym_pagination__ajax__load-more');
        var currentPage = parseInt($paginationInput.val());
        $paginationInput.val(currentPage + 1); //We make the ajax call

        acym_editorWysidDynammic.setAjaxDynamic(true);
      }
    });
  },
  selectFirstTab: function selectFirstTab() {
    jQuery('.tabs').each(function () {
      var identifier = jQuery(this).attr('id');
      var selectedTab = localStorage.getItem('acy' + identifier);
      var $lastSelected = jQuery('#' + identifier).find('a[data-tab-identifier="' + selectedTab + '"]');

      if ($lastSelected.length) {
        $lastSelected.click();
      } else {
        var $defaultTab = jQuery('#' + identifier).find('a[data-selected="true"]');

        if ($defaultTab.length) {
          $defaultTab.click();
        } else {
          jQuery('#' + identifier + ' .acym_tab:first').click();
        }
      }
    });
  },
  setDynamicsActions: function setDynamicsActions() {
    jQuery('.acym_dynamic').off('click').on('click', function () {
      var selection = window.getSelection();
      var range = document.createRange();
      range.selectNode(this);
      selection.removeAllRanges();
      selection.addRange(range);
      jQuery('#acym__wysid__modal__dynamic-text__ui__iframe').contents().find('input[name="dtextcode"]').val('');
      jQuery('#acym__wysid__modal__dynamic-text').show();
    });
    jQuery('.acym_remove_dynamic').off('click').on('click', function () {
      jQuery(this).closest('span').remove();
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidVersioning.setUndoAndAutoSave();
    });
    jQuery('tr[data-dynamic]').off('click').on('click', function () {
      acym_helperEditorWysid.$focusElement = jQuery(this);
      acym_editorWysidDynammic.openDContentModal(jQuery(this).attr('data-plugin'), jQuery(this).attr('data-dynamic'));
    });
  },
  setTagPWordBreak: function setTagPWordBreak() {
    jQuery('#acym__wysid__template').find('p').css('word-break', 'break-word');
  },
  setTagPreInserted: function setTagPreInserted() {
    var userAgent = navigator.userAgent;

    if (userAgent.toLowerCase().indexOf('chrome') > -1 || userAgent.toLowerCase().indexOf('firefox') > -1) {
      jQuery('p').find('code').css('white-space', 'pre-wrap');
      jQuery('pre').css('white-space', 'pre-wrap');
      jQuery('code').css('white-space', 'pre-wrap');
    } else if (userAgent.indexOf('MSIE ') > -1 || userAgent.indexOf('Trident/') > -1) {
      jQuery('pre').css('word-wrap', 'break-word');
      jQuery('code').css('word-wrap', 'break-word');
    } else if (userAgent.toLowerCase().indexOf('opera') > -1) {
      jQuery('pre').css('white-space', '-o-pre-wrap');
      jQuery('code').css('white-space', '-o-pre-wrap');
    }
  },
  setRefreshCustomViewChanged: function setRefreshCustomViewChanged() {
    jQuery(document).off('acym_custom_view_modal_closed').on('acym_custom_view_modal_closed', function () {
      var functionName = document.getElementById('acym__dynamic__update__function').value;
      if (typeof window[functionName] === 'function') window[functionName]();
    });
  }
};
var acym_editorWysidFontStyle = {
  setAllHtmlElementStyleWYSID: function setAllHtmlElementStyleWYSID() {
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID('p');
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID('a');
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID('li');
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID('h1');
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID('h2');
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID('h3');
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID('h4');
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID('h5');
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID('h6');
    jQuery('.acym__wysid__template__content').css('background-color', acym_editorWysidFontStyle.getSettingsOfHtmlElementWYSID('#acym__wysid__background-colorpicker', 'background-color'));
  },
  setAllSettingsOfHtmlElementWYSID: function setAllSettingsOfHtmlElementWYSID(element) {
    jQuery.each(acym_helperEditorWysid.defaultMailsSettings[element], function (property) {
      jQuery('.acym__wysid__column__element ' + element + ':not(.acym__wysid__content-no-settings-style)').css(property, acym_editorWysidFontStyle.getSettingsOfHtmlElementWYSID(element, property));
    });
  },
  getSettingsOfHtmlElementWYSID: function getSettingsOfHtmlElementWYSID(element, property) {
    return acym_helperEditorWysid.mailsSettings[element] !== undefined && acym_helperEditorWysid.mailsSettings[element][property] && acym_helperEditorWysid.mailsSettings[element][property] !== undefined ? acym_helperEditorWysid.mailsSettings[element][property] : acym_helperEditorWysid.defaultMailsSettings[element][property];
  },
  setSettingsElementStyle: function setSettingsElementStyle(element, property, value) {
    acym_helperEditorWysid.mailsSettings[element] === undefined ? acym_helperEditorWysid.mailsSettings[element] = {} : true;
    acym_helperEditorWysid.mailsSettings[element][property] = value;
    acym_editorWysidFontStyle.setAllHtmlElementStyleWYSID();
  },
  setSettingsWYSID: function setSettingsWYSID() {
    var $settingsBold = jQuery('#acym__wysid__right__toolbar__settings__bold');
    var $settingsItalic = jQuery('#acym__wysid__right__toolbar__settings__italic');
    var $currentFont = jQuery('#acym__wysid__right__toolbar__settings__font--select').val();
    var $contentTemplate = jQuery('#acym__wysid .acym__wysid__template__content');
    var $deleteBackgroundImage = jQuery('#acym__wysid__background-image__template-delete');
    jQuery('#acym__wysid__right__toolbar__settings__font-family').val(acym_editorWysidFontStyle.getSettingsOfHtmlElementWYSID($currentFont, 'font-family')).trigger('change');
    jQuery('#acym__wysid__right__toolbar__settings__font-size').val(acym_editorWysidFontStyle.getSettingsOfHtmlElementWYSID($currentFont, 'font-size')).trigger('change');
    $settingsBold.val(acym_editorWysidFontStyle.getSettingsOfHtmlElementWYSID($currentFont, 'font-weight') == 'bold' ? $settingsBold.addClass('acym__wysid__right__toolbar__settings__bold--selected') : $settingsBold.removeClass('acym__wysid__right__toolbar__settings__bold--selected'));
    $settingsItalic.val(acym_editorWysidFontStyle.getSettingsOfHtmlElementWYSID($currentFont, 'font-style') == 'italic' ? $settingsItalic.addClass('acym__wysid__right__toolbar__settings__italic--selected') : $settingsItalic.removeClass('acym__wysid__right__toolbar__settings__italic--selected'));
    acym_editorWysidColorPicker.setSettingsColorPickerWYSID(acym_editorWysidFontStyle.getSettingsOfHtmlElementWYSID($currentFont, 'color'));
    acym_editorWysidFontStyle.setAllSettingsOfHtmlElementWYSID($currentFont);
    jQuery('#acym__wysid__background-image__template').off('click').on('click', function () {
      acym_editorWysidImage.openMediaManage($contentTemplate, true);
    });
    if ($contentTemplate.css('background-image') !== 'none') $deleteBackgroundImage.css('display', 'flex');
    $deleteBackgroundImage.off('click').on('click', function () {
      $contentTemplate.css('background-image', 'none');
      jQuery(this).hide();
    });
    var $inputPaddingTop = jQuery('#acym__wysid__padding__top__content');
    $inputPaddingTop.val($contentTemplate.css('padding-top').replace(/[^-\d\.]/g, ''));
    $inputPaddingTop.off('change').on('change', function () {
      $contentTemplate.css('padding-top', jQuery(this).val() + 'px');
    });
    var $inputPaddingBottom = jQuery('#acym__wysid__padding__bottom__content');
    $inputPaddingBottom.val($contentTemplate.css('padding-bottom').replace(/[^-\d\.]/g, ''));
    $inputPaddingBottom.off('change').on('change', function () {
      $contentTemplate.css('padding-bottom', jQuery(this).val() + 'px');
    });
  },
  setSettingsControlsWYSID: function setSettingsControlsWYSID() {
    var $settingsBold = jQuery('#acym__wysid__right__toolbar__settings__bold');
    var $settingsItalic = jQuery('#acym__wysid__right__toolbar__settings__italic');
    var $toolbarFont = jQuery('#acym__wysid__right__toolbar__settings__font--select');
    $toolbarFont.on('change', function () {
      acym_editorWysidFontStyle.setSettingsWYSID();
    });
    jQuery('#acym__wysid__right__toolbar__settings__font-family').on('change', function () {
      acym_editorWysidFontStyle.setSettingsElementStyle(jQuery('#acym__wysid__right__toolbar__settings__font--select').val(), 'font-family', jQuery(this).val());
    });
    jQuery('#acym__wysid__right__toolbar__settings__font-size').on('change', function () {
      acym_editorWysidFontStyle.setSettingsElementStyle(jQuery('#acym__wysid__right__toolbar__settings__font--select').val(), 'font-size', jQuery(this).val());
    });
    $settingsBold.off('click').on('click', function () {
      $settingsBold.hasClass('acym__wysid__right__toolbar__settings__bold--selected') ? $settingsBold.removeClass('acym__wysid__right__toolbar__settings__bold--selected') && acym_editorWysidFontStyle.setSettingsElementStyle($toolbarFont.val(), 'font-weight', 'normal') : $settingsBold.addClass('acym__wysid__right__toolbar__settings__bold--selected') && acym_editorWysidFontStyle.setSettingsElementStyle($toolbarFont.val(), 'font-weight', 'bold');
    });
    $settingsItalic.off('click').on('click', function () {
      $settingsItalic.hasClass('acym__wysid__right__toolbar__settings__italic--selected') ? $settingsItalic.removeClass('acym__wysid__right__toolbar__settings__italic--selected') && acym_editorWysidFontStyle.setSettingsElementStyle($toolbarFont.val(), 'font-style', 'normal') : $settingsItalic.addClass('acym__wysid__right__toolbar__settings__italic--selected') && acym_editorWysidFontStyle.setSettingsElementStyle($toolbarFont.val(), 'font-style', 'italic');
    });
  },
  setApplyStylesheetSettings: function setApplyStylesheetSettings() {
    jQuery('#acym__wysid__right__toolbar__settings__stylesheet__apply').off('click').on('click', function () {
      var css = jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val();
      jQuery('.acym__wysid__hidden__save__stylesheet').val(css);
      jQuery('#acym__wysid__edit').append('<style id="acym__wysid__custom__style">' + acym_helperEditorWysid.parseTextToCss(css) + '</style>');
      jQuery('#acym__wysid__right__toolbar__settings__stylesheet__modal').foundation('close');
    });
  },
  setOpenStylesheet: function setOpenStylesheet() {
    jQuery('#acym__wysid__right__toolbar__settings__stylesheet__open').on('click', function () {
      acym_helperEditorWysid.stylesheetTemp = jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val();
    });
  },
  setCancelStylesheet: function setCancelStylesheet() {
    jQuery('#acym__wysid__right__toolbar__settings__stylesheet__cancel').on('click', function () {
      jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val(acym_helperEditorWysid.stylesheetTemp);
      jQuery('#acym__wysid__right__toolbar__settings__stylesheet__modal').foundation('close');
    });
  },
  setSocialIconImport: function setSocialIconImport() {
    var allSocialIcons = JSON.parse(jQuery('#acym__mail__edit__editor__social__icons').val());
    if (undefined === allSocialIcons) return;
    jQuery.each(Object.keys(allSocialIcons), function (index, value) {
      acym_helperEditorWysid.socialMedia[value].src = allSocialIcons[value];
    });
    jQuery('.acym__wysid__social__icons__import__text').off('click').on('click', function () {
      var $this = jQuery(this);
      var $inputFile = $this.closest('.acym__wysid__right__toolbar__design__social__icons__one').find('input');
      $inputFile.click();
      $inputFile.off('change').on('change', function () {
        var filename = jQuery(this).val().split('\\').pop();
        $this.closest('.acym__wysid__right__toolbar__design__social__icons__one').find('.acym__wysid__social__icons__import__delete').remove();

        if (undefined === filename || '' === filename) {
          $this.html(ACYM_JS_TXT.ACYM_SELECT_NEW_ICON);
          $this.closest('.acym__wysid__right__toolbar__design__social__icons__one').find('button').attr('disabled', 'disabled');
        } else {
          $this.html(filename).after('<i class="acymicon-close cell shrink acym__wysid__social__icons__import__delete cursor-pointer"></i>');
          $this.closest('.acym__wysid__right__toolbar__design__social__icons__one').find('button').removeAttr('disabled');
        }

        jQuery('.acym__wysid__social__icons__import__delete').off('click').on('click', function () {
          jQuery(this).closest('.acym__wysid__right__toolbar__design__social__icons__one').find('button').attr('disabled', 'disabled');
          jQuery(this).closest('.acym__wysid__right__toolbar__design__social__icons__one').find('input').val('').trigger('change');
          jQuery(this).remove();
        });
      });
    });
    jQuery('.acym__wysid__social__icons__import').off('click').on('click', function () {
      jQuery(this).closest('div').find('.acym__wysid__social__icons__import__delete').html('').attr('class', 'acymicon-circle-o-notch acymicon-spin acym__wysid__social__icons__import__delete').css('color', '#303e46');
      var $input = jQuery(this).closest('.acym__wysid__right__toolbar__design__social__icons__one').find('input');
      var file_data = $input.prop('files')[0];
      var form_data = new FormData();
      form_data.append('file', file_data);
      var whichIcon = $input.attr('name').replace('icon_', '');
      var ajaxUrl = ACYM_AJAX_URL + '&ctrl=' + acym_helper.ctrlMails + '&task=setNewIconShare&social=' + whichIcon;
      jQuery.ajax({
        url: ajaxUrl,
        dataType: 'text',
        // what to expect back from the PHP script, if anything
        cache: false,
        contentType: false,
        processData: false,
        data: form_data,
        type: 'post',
        success: function success(res) {
          res = acym_helper.parseJson(res);

          if (res.type !== undefined) {
            if (res.type === 'success') {
              var img = jQuery('img').filter('[src^="' + res.url + '"]');
              var finalUrl = res.url + '.' + res.extension;
              jQuery.each(img, function () {
                var d = new Date();
                jQuery(this).removeAttr('src').attr('src', finalUrl + '?d=' + d.getTime());
              });
              acym_helperEditorWysid.socialMedia[whichIcon].src = finalUrl;
            }

            $input.val('').trigger('change');
            acym_editorWysidNotifications.addEditorNotification({
              'message': res.message,
              'level': res.type
            });
          }
        }
      });
    });
  }
};
var acym_editorWysidFormAction = {
  saveAjaxMail: function saveAjaxMail(controller, sendTest, saveAsTmpl) {
    if (controller.indexOf('mails') !== -1 || saveAsTmpl) {
      return jQuery.when(acym_helperThumbnail.setAjaxSaveThumbnail()).done(function () {
        return acym_editorWysidFormAction._ajaxCall(controller, sendTest, saveAsTmpl);
      }).fail(function (err) {
        console.log(err);
        return acym_editorWysidFormAction._ajaxCall(controller, sendTest, saveAsTmpl);
      });
    } else {
      return acym_editorWysidFormAction._ajaxCall(controller, sendTest, saveAsTmpl);
    }
  },
  saveTemplate: function saveTemplate(sendTest, saveAsTmpl) {
    var $warning = jQuery('#acym__wysid__warning__thumbnail');

    if (!$warning.is(':visible')) {
      var heightOverlay = window.innerHeight - jQuery('#acym__wysid__top-toolbar').offset().top - jQuery('#acym__wysid__wrap').height();
      jQuery('#acym__wysid__warning__thumbnail').css('bottom', '-' + heightOverlay + 'px').toggle();
    }

    var $template = jQuery('#acym__wysid__template');
    $template.css({
      'overflow': 'hidden',
      'overflow-y': 'auto'
    });
    jQuery('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
    jQuery('.acym__wysid__tinymce--text--placeholder--empty').removeClass('acym__wysid__tinymce--text--placeholder--empty');
    jQuery('#acym__wysid__template img').each(function () {
      var width = jQuery(this).width();
      var outerWidth = jQuery(this).outerWidth();
      jQuery(this).attr('width', width).attr('height', jQuery(this).height()).css('width', outerWidth);
    });
    jQuery('[id^="template_version_"]').remove(); //We remove the comments

    jQuery('#acym__wysid__template *').contents().each(function () {
      if (this.nodeType === Node.COMMENT_NODE) {
        jQuery(this).remove();
      }
    });
    $template.find('.acym__wysid__column__element__td').css('outline-width', '0px');
    $template.find('[contenteditable]').attr('contenteditable', 'false');
    jQuery('#acym__wysid__template a.acym__wysid__column__element__button').each(function () {
      var buttonMicrosoft = acym_editorWysidOutlook.setButtonOutlook(jQuery(this));
      jQuery(this).before(buttonMicrosoft);
      jQuery(this).after('<!-- <![endif]-->');
    });
    jQuery('#acym__wysid__template .acym__wysid__row__element').each(function () {
      if (jQuery(this).css('background-image') !== '' && jQuery(this).css('background-image') !== 'none') {
        acym_editorWysidOutlook.setBackgroundOutlook(jQuery(this));
      }
    });

    if (!sendTest && !saveAsTmpl) {
      jQuery('.mce-edit-focus').removeClass('mce-edit-focus');
      $template.find('[name^="mce_"]').remove();
      $template.find('#acym__wysid__default').remove();
    }

    if (saveAsTmpl) {
      jQuery('.acym__wysid__hidden__save__content__template').val('<div id="acym__wysid__template" class="cell">' + $template.html() + '</div>');
      jQuery('.acym__wysid__hidden__save__settings__template').val(JSON.stringify(acym_helperEditorWysid.mailsSettings));
      jQuery('.acym__wysid__hidden__save__stylesheet__template').val(jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val());
    } else {
      jQuery('.acym__wysid__hidden__save__content').val('<div id="acym__wysid__template" class="cell">' + $template.html() + '</div>').trigger('change');
      jQuery('.acym__wysid__hidden__save__settings').val(JSON.stringify(acym_helperEditorWysid.mailsSettings));
      jQuery('.acym__wysid__hidden__save__stylesheet').val(jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val());
    }

    return acym_editorWysidFormAction.saveAjaxMail(jQuery('[name="ctrl"]').val(), sendTest, saveAsTmpl);
  },
  _ajaxCall: function _ajaxCall(controller, fromSendTest, saveAsTmpl) {
    // Handle when multilingual
    acym_editorWysidMultilingual.storeCurrentValues();
    var ajaxUrl = ACYM_AJAX_URL + '&ctrl=' + controller;

    if (saveAsTmpl) {
      jQuery('input[name="task"]').val('saveAsTmplAjax');
      ajaxUrl += '&saveAsTmpl=1';
    } else {
      jQuery('input[name="task"]').val('saveAjax');
    }

    return acym_helper.post(ajaxUrl, jQuery('#acym_form').serialize()).done(function (res) {
      if (res['error'] === true && '' !== res['message']) {
        acym_helperNotification.addNotification(res['message'], 'error');
      } else {
        if (!saveAsTmpl) {
          jQuery('mail' === controller ? '[name="id"]' : '[name="id"], [name="mail[id]"]').val(res.data);
          acym_helperEditorWysid.insertDTextInSubject = true;

          if (!fromSendTest) {
            jQuery('#acym_header').css('display', '');
            jQuery('.acym__content').css('display', '');
            jQuery('#acym__wysid').css('display', 'none');
            jQuery('#acym__wysid__edit').css('display', '');
          }
        } else {
          acym_editorWysidNotifications.addEditorNotification({
            'message': ACYM_JS_TXT.ACYM_TEMPLATE_CREATED,
            'level': 'success'
          }, 3000, false);
        }

        if (fromSendTest) acym_editorWysidTest.sendTest(res.data);
        jQuery('#acym__wysid__warning__thumbnail').toggle();
      }

      jQuery('#acym__wysid__save__button').removeAttr('disabled');
    }).fail(function (jqXHR, textStatus) {
      alert('Request failed: ' + textStatus);
    });
  },
  setSaveButtonWYSID: function setSaveButtonWYSID() {
    jQuery('#acym__wysid__save__button').off('click').on('click', function () {
      if (jQuery('[name="ctrl"]').val().indexOf('campaigns') !== -1 || jQuery('#acym__mail__type').val() === 'followup') {
        acym_editorWysidFormAction.saveTemplate(false, false);
        return true;
      }

      acym_editorWysidFormAction.setSaveTmpl(false);
    });
  },
  setSaveAsTmplButtonWYSID: function setSaveAsTmplButtonWYSID() {
    jQuery('#acym__wysid__saveastmpl__button').off('click').on('click', function () {
      if (acym_helper.confirm(ACYM_JS_TXT.ACYM_SAVE_AS_TEMPLATE_CONFIRMATION)) {
        acym_editorWysidFormAction.setSaveTmpl(true);
      }
    });
  },
  setSaveTmpl: function setSaveTmpl(saveAsTmpl) {
    var $editorArea = jQuery('#acym__wysid__wrap');
    var heightOverlay = window.innerHeight - jQuery('#acym__wysid__top-toolbar').offset().top - $editorArea.height();
    jQuery('#acym__wysid__warning__thumbnail').css('bottom', '-' + heightOverlay + 'px').toggle();
    setTimeout(function () {
      acym_editorWysidFormAction.setThumbnailPreSave().then(function (dataUrl) {
        // Copy img content in hidden input
        jQuery('#editor_thumbnail').attr('value', dataUrl);
        acym_editorWysidFormAction.saveTemplate(false, saveAsTmpl);
      })["catch"](function (err) {
        console.error('Error generating template thumbnail: ' + err);
        acym_editorWysidFormAction.saveTemplate(false, saveAsTmpl);
      });
    }, 10);
  },
  setThumbnailPreSave: function setThumbnailPreSave() {
    jQuery('#acym__wysid__template').css({
      'overflow': 'unset',
      'overflow-y': 'unset'
    });
    var tmplheight = jQuery('.acym__wysid__template__content').height();
    var node = document.getElementById('acym__wysid__template');
    return html2canvas(node, {
      height: tmplheight,
      logging: false
    }).then(function (canvas) {
      return canvas.toDataURL('image/png');
    });
  },
  setEditButtonWYSID: function setEditButtonWYSID() {
    jQuery('#acym__wysid__edit__button').off('click').on('click', function () {
      if (jQuery('#acym__wysid .acym__wysid__template__content').css('background-image') !== 'none') {
        jQuery('#acym__wysid__background-image__template-delete').hide();
      }

      acym_helperEditorWysid.insertDTextInSubject = false;
      jQuery('.acym__wysid__row__element__toolbox__colorpicker').spectrum('destroy');
      jQuery('.sp-container').remove();
      jQuery('#acym_header').css('display', 'none');
      jQuery('.acym__content').css('display', 'none');
      var acymWysidDivStyle = {
        'display': 'inherit'
      };

      if (ACYM_CMS === 'joomla') {
        acymWysidDivStyle.top = jQuery('.navbar-fixed-top').height() + 'px';
      }

      jQuery('#acym__wysid').css(acymWysidDivStyle);
      jQuery('#acym__wysid__edit').css('display', 'none');

      if ('' !== jQuery('.acym__wysid__hidden__save__content').val()) {
        jQuery('#acym__wysid__template').replaceWith(jQuery('.acym__wysid__hidden__save__content').val());
      }

      acym_helperEditorWysid.saveSettings = jQuery('.acym__wysid__hidden__save__settings').val() != '' ? jQuery('.acym__wysid__hidden__save__settings').val() : '';
      acym_helperEditorWysid.mailsSettings = acym_helperEditorWysid.saveSettings == '' ? {} : JSON.parse(acym_helperEditorWysid.saveSettings);

      if (jQuery('.acym__wysid__hidden__save__stylesheet').val() != '') {
        acym_helperEditorWysid.savedStylesheet = jQuery('.acym__wysid__hidden__save__stylesheet').val();
        jQuery('#acym__wysid__right__toolbar__settings__stylesheet__textarea').val(acym_helperEditorWysid.savedStylesheet);
      }

      var $images = jQuery('#acym__wysid #acym__wysid__template img');
      var numberImages = $images.length;

      if (numberImages > 0) {
        var countLoadedImages = 0;
        $images.on('load', function () {
          countLoadedImages++;
          if (numberImages === countLoadedImages) acym_editorWysidRowSelector.setRowSelector();
        });
      } else {
        acym_editorWysidRowSelector.setRowSelector();
      }

      var $template = jQuery('#acym__wysid__template');
      $template.find('[contenteditable]').attr('contenteditable', 'true');
      $template.find('[id^="mce_"]').removeAttr('id');
      acym_helperEditorWysid.setColumnRefreshUiWYSID(); // When the edition starts, we reload the editor

      acym_editorWysidVersioning.setUndoAndAutoSave(true);
      var $elementsToReload = jQuery('tr[data-dynamic]');
      if ($elementsToReload.length > 0) acym_editorWysidDynammic.insertDContent('', $elementsToReload);
    });
  },
  setCancelButtonWYSID: function setCancelButtonWYSID() {
    jQuery('#acym__wysid__cancel__button').off('click').on('click', function () {
      acym_helperEditorWysid.insertDTextInSubject = true;
      jQuery('#acym_header').css('display', '');
      jQuery('.acym__content').css('display', '');
      jQuery('#acym__wysid').css('display', 'none');
      jQuery('#acym__wysid__edit').css('display', '');
      jQuery('.acym__wysid__hidden__save__stylesheet').val(acym_helperEditorWysid.savedStylesheet);
    });
  }
};
var isSearching = false;
var lastSearch = '';
var defaultSearch = 'hello';
var limitSearch = 24;
var acym_editorWysidGiphy = {
  loadGif: function loadGif() {
    var _this2 = this;

    //When we're already searching for gif no need to make more research in the function setResearchInput
    isSearching = true; //When it's the same research no need to make the research again

    lastSearch = acym_helperEditorWysid.queryGiphy; //We get the grid where we display the result and then we initiate masonry

    var $grid = jQuery('#acym__wysid__modal__giphy--results');
    $grid = $grid.masonry({
      itemSelector: 'img'
    }); //We make the call on giphy to get all the gif

    jQuery.ajax({
      url: 'https://api.giphy.com/v1/gifs/search?limit=' + limitSearch + '&offset=' + acym_helperEditorWysid.offsetGiphy + '&q=' + acym_helperEditorWysid.queryGiphy + '&api_key=6hR2IN2Db2aw4XdtNxLELKtOh66F5XSo&rating=PG',
      dataType: 'json'
    }).then(function (res) {
      if (res.data.length === 0 && acym_helperEditorWysid.offsetGiphy === 0) {
        //If there is no result
        if ($grid.data('masonry')) $grid.masonry('destroy');
        var $errorMessage = jQuery('#acym__wysid__modal__giphy--error_message');
        $errorMessage.html(ACYM_JS_TXT.ACYM_NO_RESULTS_FOUND);
        $errorMessage.show(); // We empty the results grid and empty it

        $grid.html('');
        $grid.hide();
        jQuery('#acym__wysid__modal__giphy--low-res-message').hide();
      } else {
        $grid.show(); //We remove the class new to only get the new images

        jQuery('.acym__wysid__modal__giphy__results--img--new').removeClass('acym__wysid__modal__giphy__results--img--new'); //We remove the title no result if there is one

        var _$errorMessage = jQuery('#acym__wysid__modal__giphy--error_message');

        _$errorMessage.html('');

        _$errorMessage.hide();

        jQuery('#acym__wysid__modal__giphy--low-res-message').show(); //if the offset is at 0 it means we reset the research or it's the first call

        if (acym_helperEditorWysid.offsetGiphy === 0) {
          //We remove all the images that could be in the grid
          $grid.masonry('remove', $grid.find('.acym__wysid__modal__giphy__results--img')); //We scroll at the top to get the first images

          jQuery('.acym__wysid__modal__giphy__results__container').scrollTop(0);
        } //We build the content of the grid => create img tab for every result


        var results = '';
        var columnWidth = $grid.width() / 4;
        jQuery.each(res.data, function (index, value) {
          var ratio = parseInt(columnWidth * 100 / parseInt(value.images.preview_gif.width)) / 100;
          var height = parseInt(value.images.preview_gif.height * ratio);
          results += "<img class=\"acym__wysid__modal__giphy__results--img acym__wysid__modal__giphy__results--img--new\" style=\"height: ".concat(height, "px\" src=\"").concat(value.images.preview_gif.url, "\" data-full-res-src=\"").concat(value.images.downsized.url, "\">");
        }); //We append it and init masonry for them

        var $results = jQuery(results);
        $grid.append($results).masonry('appended', $results);
        $grid.masonry('layout'); //load more on scroll

        _this2.loadMoreGif(); //selection for the gif (put the border selected)


        _this2.setSelectGif(); //Set the research bar with the button


        _this2.setResearchInput();
      }
    }).fail(function () {
      //If the request fail we let know the user
      if ($grid.data('masonry')) $grid.masonry('destroy');
      var $errorMessage = jQuery('#acym__wysid__modal__giphy--error_message');
      $errorMessage.html(ACYM_JS_TXT.ACYM_COULD_NOT_LOAD_GIF_TRY_FEW_MINUTES);
      $errorMessage.show(); // We empty the results grid and empty it

      $grid.html('');
      $grid.hide();
      jQuery('#acym__wysid__modal__giphy--low-res-message').hide();
    }).always(function () {
      isSearching = false;
    });
  },
  setSelectGif: function setSelectGif() {
    //selection for the gif (put the border selected)
    jQuery('.acym__wysid__modal__giphy__results--img').off('click').on('click', function () {
      jQuery('.acym__wysid__modal__giphy__results--img--selected').removeClass('acym__wysid__modal__giphy__results--img--selected');
      jQuery(this).toggleClass('acym__wysid__modal__giphy__results--img--selected');
      jQuery('#acym__wysid__modal__giphy--insert').removeAttr('disabled');
    });
  },
  loadMoreGif: function loadMoreGif() {
    //load more on scroll
    jQuery('.acym__wysid__modal__giphy__results__container').on('scroll', function () {
      //We subtract 80 this way the call trigger before the user touch the bottom and he have to wait less time
      var scrollToDo = jQuery(this)[0].scrollHeight - 80;
      var scrollDone = jQuery(this).height() + jQuery(this).scrollTop(); //if we reach the end we load more entities

      if (scrollDone >= scrollToDo) {
        //once it's done we remove the event listener on the scroll to prevent calling X times the urls
        jQuery(this).off('scroll');
        acym_helperEditorWysid.offsetGiphy += limitSearch;
        acym_editorWysidGiphy.loadGif();
      }
    });
  },
  setResearchInput: function setResearchInput() {
    var _this3 = this;

    //Set the research bar with the button
    jQuery('#acym__wysid__modal__giphy--search--button').off('click').on('click', function () {
      _this3.makeNewResearch(jQuery('#acym__wysid__modal__giphy--search').val());
    });
    jQuery('#acym__wysid__modal__giphy--search').off('keyup').on('keyup', function (e) {
      var search = jQuery(this).val();
      var sameResearch = lastSearch === search;
      if (search === '' && lastSearch === defaultSearch || isSearching || sameResearch) return;
      clearTimeout(acym_helperEditorWysid.typingTimerGiphy);

      if (e.which === 13) {
        acym_editorWysidGiphy.makeNewResearch(search);
      } else if (search.length >= 2) {
        acym_helperEditorWysid.typingTimerGiphy = setTimeout(function () {
          acym_editorWysidGiphy.makeNewResearch(search);
        }, 1000);
      } else if (search === '') {
        acym_editorWysidGiphy.makeNewResearch(search);
      }
    });
  },
  makeNewResearch: function makeNewResearch(query) {
    //If we make a new research we reset the research to 0 like it's the first we load the modal
    acym_helperEditorWysid.offsetGiphy = 0;
    acym_helperEditorWysid.queryGiphy = query === '' ? defaultSearch : query;
    var $grid = jQuery('#acym__wysid__modal__giphy--results');
    if ($grid.data('masonry')) $grid.masonry('destroy');
    this.loadGif();
  },
  insertGif: function insertGif() {
    //Function to insert gif
    jQuery('#acym__wysid__modal__giphy--insert').off('click').on('click', function () {
      var $selectedImg = jQuery('.acym__wysid__modal__giphy__results--img--selected'); //if no selected image => out

      if ($selectedImg.length === 0) return false;
      var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
      content += '<td class="large-12 acym__wysid__column__element__td">';
      content += '<div class="acym__wysid__tinymce--image">';
      content += '<img class="acym__wysid__media__inserted acym__wysid__media__inserted--focus acym__wysid__media__giphy" src="' + $selectedImg.attr('data-full-res-src') + '" style="max-width: 100%; height: auto;  box-sizing: border-box; padding: 0 5px;display:block; margin-left: auto; margin-right: auto;"/>';
      content += '</div>';
      content += '</td>';
      content += '</tr>';
      acym_helperEditorWysid.$focusElement.replaceWith(content); //Display none on the modal to hide it

      jQuery('#acym__wysid__modal').css('display', 'none');
      jQuery('.acym__wysid__media__inserted--focus').on('load', function () {
        jQuery(this).removeClass('acym__wysid__media__inserted--focus');
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidVersioning.setUndoAndAutoSave();
      });
    });
  }
};
var acym_editorWysidImage = {
  setDoubleClickImage: function setDoubleClickImage() {
    jQuery('.acym__wysid__tinymce--image img').off('dblclick').on('dblclick', function () {
      if (jQuery(this).hasClass('acym__wysid__media__giphy')) {
        acym_editorWysidNewContent.addGiphyWYSID(jQuery(this).closest('.acym__wysid__column__element'));
      } else {
        acym_editorWysidImage.doubleClickImage(jQuery(this));
      }
    });
  },
  doubleClickImage: function doubleClickImage($element) {
    this.openMediaManage($element.closest('.acym__wysid__column__element'));
  },
  addBackgroundImgToRows: function addBackgroundImgToRows($element) {
    var $deleteImage = jQuery('#acym__wysid__context__block__background-image__remove');

    if ('none' !== $element.css('background-image')) {
      $deleteImage.show();
    } else {
      $deleteImage.hide();
    }

    jQuery('#acym__wysid__context__block__background-image').off('click').on('click', function () {
      acym_editorWysidImage.openMediaManage($element, true);
    });
    $deleteImage.off('click').on('click', function () {
      $element.css({
        'background-image': 'none'
      });
      jQuery(this).hide();
    });
  },
  setImageWidthHeightOnInsert: function setImageWidthHeightOnInsert() {
    if (jQuery('.acym__wysid__media__inserted').length > 0) {
      setTimeout(function () {
        var $insertedImg = jQuery('.acym__wysid__media__inserted');
        $insertedImg.attr('height', $insertedImg.height()).attr('width', $insertedImg.width());
      }, 200);
    }
  },
  openMediaManage: function openMediaManage(ui, rows) {
    if (ACYM_CMS === 'wordpress') {
      acym_editorWysidWordpress.addMediaWPWYSID(ui, rows);
    } else {
      acym_editorWysidJoomla.addMediaJoomlaWYSID(ui, rows);
    }
  },
  setChangeBuiltWithImage: function setChangeBuiltWithImage() {
    jQuery('[name="acym__wysid__built-with__text__color"]').on('change', function () {
      var $imageBuiltWith = jQuery('[title="poweredby"]');
      var selected = jQuery(this).val();
      var previous = selected === 'white' ? 'black' : 'white';
      $imageBuiltWith.attr('src', $imageBuiltWith.attr('src').replace(previous, selected));
    });
  }
};
var acym_editorWysidJoomla = {
  addMediaJoomlaWYSID: function addMediaJoomlaWYSID(ui, rows) {
    rows = rows === undefined ? false : rows;
    acym_helperEditorWysid.$focusElement = jQuery(ui);
    var $modalUi = jQuery('#acym__wysid__modal__joomla-image__ui__iframe');
    var joomla4 = jQuery('#acym__wysid__modal__joomla-image__ui__actions').length > 0;
    $modalUi.css({
      'height': joomla4 ? '90%' : '100%',
      'width': '100%'
    });
    $modalUi.contents().find('.chzn-container-single').attr('style', '').css('width', '150px');
    acym_editorWysidJoomla.setInsertMediaJoomlaWYSID($modalUi, rows);
    $modalUi.on('load', function () {
      acym_editorWysidJoomla.setInsertMediaJoomlaWYSID($modalUi, rows);
    });
    jQuery('#acym__wysid__modal__joomla-image').css('display', 'inherit');
  },
  cancelMediaSelection: function cancelMediaSelection(rows) {
    jQuery('#acym__wysid__modal__joomla-image').hide();

    if (!rows) {
      if (acym_helperEditorWysid.$focusElement.length && acym_helperEditorWysid.$focusElement.html().indexOf('insert_photo') !== -1) {
        acym_helperEditorWysid.$focusElement.replaceWith('');
      }

      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidVersioning.setUndoAndAutoSave();
      acym_helperEditorWysid.checkForEmptyTbodyWYSID();
    }
  },
  validateMediaSelection: function validateMediaSelection(isRowBackgroundImage, imagesUrls, altValue, valueTitle) {
    // No image selected and no url provided
    if (acym_helper.empty(imagesUrls)) {
      alert(ACYM_JS_TXT.ACYM_SELECT_A_PICTURE);
      return;
    } // If we're selecting a background image for an editor row


    if (isRowBackgroundImage) {
      var linkImage = imagesUrls.pop(); // If the name isn't correct, ask for confirmation

      if (linkImage.indexOf('..') >= 0 && !confirm(ACYM_JS_TXT.ACYM_INSERT_IMG_BAD_NAME)) return;
      var padding = acym_helperEditorWysid.$focusElement.css('padding-top');

      if (!acym_helperEditorWysid.$focusElement.hasClass('acym__wysid__template__content')) {
        acym_helperEditorWysid.$focusElement.css('background-color', '').attr('bgcolor', '');
        acym_helperEditorWysid.$focusElement.attr('style', 'background-image: url(\'' + linkImage + '\'); background-size: cover; background-position: center; background-repeat: no-repeat; padding: ' + padding + ' 0').attr('width', acym_helperEditorWysid.$focusElement.width());
      } else {
        acym_helperEditorWysid.$focusElement.attr('style', 'background-image: url(\'' + linkImage + '\'); background-size: cover; background-position: center; background-repeat: no-repeat; padding: ' + padding + ' 0 40px 0');

        if (acym_helperEditorWysid.$focusElement.css('background-image') !== 'none') {
          jQuery('#acym__wysid__background-image__template-delete').css('display', 'flex');
        }
      }

      acym_editorWysidNotifications.addEditorNotification({
        'message': ACYM_JS_TXT.ACYM_BECARFUL_BACKGROUND_IMG,
        'level': 'warning'
      });
    } else {
      // We're selecting an image to insert in the email
      var content = '';
      var $link = acym_helperEditorWysid.$focusElement.find('.acym__wysid__link__image');

      for (var i in imagesUrls) {
        if (!imagesUrls.hasOwnProperty(i)) continue;
        var _linkImage = imagesUrls[i]; // If the name isn't correct, ask for confirmation

        if (_linkImage.indexOf('..') >= 0 && !confirm(ACYM_JS_TXT.ACYM_INSERT_IMG_BAD_NAME)) return;
        var alt = '';
        var title = '';
        if (altValue !== undefined) alt = altValue;
        if (valueTitle !== undefined) title = valueTitle;
        var classImage = parseInt(i) === 0 ? 'acym__wysid__media__inserted--selected' : '';
        content += '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
        content += '<td class="large-12 acym__wysid__column__element__td">';
        content += '<div class="acym__wysid__tinymce--image">';
        content += '<p style="text-align: center" data-mce-style="text-align: center">';
        if ($link.length > 0 && parseInt(i) === 0) content += '<a href="' + $link.attr('href') + '" class="acym__wysid__link__image" target="_blank">';
        content += '<img class="acym__wysid__media__inserted ' + classImage + '" style="max-width: 100%; height: auto;  box-sizing: border-box; padding: 0 5px;display:inline-block; margin-left: auto; margin-right: auto;" src="' + _linkImage + '" alt="' + acym_helper.escape(alt) + '" title="' + acym_helper.escape(title) + '"/>';
        if ($link.length > 0) content += '</a>';
        content += '</p>';
        content += '</div>';
        content += '</td>';
        content += '</tr>';
      }

      acym_helperEditorWysid.$focusElement.replaceWith(content);
    } // Close the image selection modal


    jQuery('#acym__wysid__modal__joomla-image').hide();
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
    acym_editorWysidVersioning.setUndoAndAutoSave();
  },
  setInsertMediaJoomlaWYSID: function setInsertMediaJoomlaWYSID($modalUi, rows) {
    // Joomla 4
    jQuery('#acym__wysid__modal__joomla-image__ui__actions__cancel').off('click').on('click', function () {
      acym_editorWysidJoomla.cancelMediaSelection(rows);
    });
    jQuery('#acym__wysid__modal__joomla-image__ui__actions__select').off('click').on('click', function () {
      // 1 - Get current folder
      var imageUrl;
      var folderPath = ACYM_ROOT_URI;
      $modalUi.contents().find('.media-breadcrumb-item a').each(function () {
        folderPath += jQuery(this).text().trim() + '/';
      }); // 2 - Get selected image(s)

      var imagesUrls = []; // When selecting a images from the grid view

      $modalUi.contents().find('.media-browser-grid .media-browser-item.selected .media-browser-image .media-browser-item-info').each(function () {
        imagesUrls.push(folderPath + jQuery(this).text().trim());
      }); // When selecting images from the list view instead of grid view

      if (imagesUrls.length === 0) {
        $modalUi.contents().find('.media-browser .media-browser-item.selected').each(function () {
          if (!acym_helper.empty(jQuery(this).find('.size').text().trim())) {
            imagesUrls.push(folderPath + jQuery(this).find('.name').text().trim());
          }
        });
      }

      acym_editorWysidJoomla.validateMediaSelection(rows, imagesUrls, '', '');
    }); // Joomla 3

    $modalUi.contents().find('.button-cancel').attr('onclick', '').off('click').on('click', function () {
      acym_editorWysidJoomla.cancelMediaSelection(rows);
    });
    $modalUi.contents().find('.pull-right .btn-success, .pull-right .btn-primary').attr('onclick', '').off('click').on('click', function () {
      var urlImg = $modalUi.contents().find('#f_url').val();
      var altValue = $modalUi.contents().find('#f_alt').val();
      var valueTitle = $modalUi.contents().find('#f_title').val();
      var imagesUrls = [];

      if (!acym_helper.empty(urlImg)) {
        if (urlImg.match('^' + ACYM_JOOMLA_MEDIA_FOLDER)) urlImg = ACYM_JOOMLA_MEDIA_IMAGE + urlImg;
        imagesUrls.push(urlImg);
      }

      acym_editorWysidJoomla.validateMediaSelection(rows, imagesUrls, altValue, valueTitle);
    });
  }
};
var acym_editorWysidModal = {
  setModalWindowWYSID: function setModalWindowWYSID() {
    jQuery('.acym__wysid__modal--close').click(function () {
      jQuery('.acym__wysid__modal').hide();

      if (acym_helperEditorWysid.$focusElement.length && acym_helperEditorWysid.$focusElement.prop('tagName') != 'TR') {
        acym_helperEditorWysid.$focusElement.replaceWith('');
      }

      acym_helperEditorWysid.checkForEmptyTbodyWYSID();
    });

    if (ACYM_CMS == 'joomla') {
      jQuery('.acym__wysid__modal__joomla-image--close').click(function () {
        jQuery('#acym__wysid__modal__joomla-image').hide();

        if (acym_helperEditorWysid.$focusElement.length && acym_helperEditorWysid.$focusElement.prop('tagName') != 'TR' && !acym_helperEditorWysid.$focusElement.hasClass('acym__wysid__template__content')) {
          acym_helperEditorWysid.$focusElement.replaceWith('');
        }

        acym_helperEditorWysid.checkForEmptyTbodyWYSID();
      });
    }
  },
  setSelectOneTemplate: function setSelectOneTemplate() {
    jQuery('.acym__template__choose__ajax').off('DOMSubtreeModified').on('DOMSubtreeModified', function () {
      jQuery('.acym__template__choose__list .acym__templates__oneTpl').off('click').on('click', function (e) {
        e.preventDefault();
        var thisLink = jQuery(this).find('a').attr('href');
        var ajaxUrl = ACYM_AJAX_URL + '&page=acymailing_mails&ctrl=' + acym_helper.ctrlMails + '&task=getMailContent&from=' + jQuery(this).attr('id');
        jQuery.post(ajaxUrl, function (response) {
          if (response == 'error') {
            alert(ACYM_JS_TXT.ACYM_ERROR);
            return false;
          }

          window.location.href = thisLink;
          return false;
        });
      });
    });
  },
  setDynamicsModal: function setDynamicsModal() {
    var $iframe = jQuery('#acym__wysid__modal__dynamic-text__ui__iframe');
    $iframe.on('load', function () {
      jQuery(this).contents().find('#wpadminbar').remove();
      $iframe.contents().find('#insertButton').off('click').on('click', function () {
        var $toInsert = $iframe.contents().find('#dtextcode').val();

        if ($toInsert) {
          if (acym_helperEditorWysid.insertDTextInSubject) {
            var subject = jQuery('#acym_subject_field');
            subject.val(subject.val() + $toInsert);
          } else {
            var mailId = jQuery('input[name="editor_autoSave"]').val();
            var ajaxUrl = ACYM_AJAX_URL + '&page=acymailing_dynamics&ctrl=' + acym_helper.ctrlDynamics + '&task=replaceDummy';
            jQuery.ajax({
              url: ajaxUrl,
              type: 'POST',
              data: {
                'mailId': mailId,
                'code': $toInsert
              }
            }).then(function (response) {
              if (response) {
                response = acym_helper.parseJson(response);
              } else {
                response = {
                  'content': $toInsert
                };
              }

              $toInsert = '<span class="acym_dynamic mceNonEditable" data-dynamic="' + $toInsert + '">' + response.content + '<i class="acym_remove_dynamic acymicon-close">&zwj;</i></span> '; // Magic line, I don't know why but without it the previous dtext isn't replaced by the new one

              window.getSelection().getRangeAt(0).extractContents();
              tinymce.activeEditor.execCommand('mceInsertContent', false, $toInsert);
              acym_helperEditorWysid.setColumnRefreshUiWYSID();
              acym_editorWysidVersioning.setUndoAndAutoSave();
            });
          }

          jQuery('#acym__wysid__modal__dynamic-text').hide();
        }
      });
    });
  }
};
var acym_editorWysidMultilingual = {
  currentLanguage: 'main',
  selectedLanguage: '',
  forceReload: false,
  setLanguageSelection: function setLanguageSelection() {
    jQuery('.acym__wysid__edit__languages__selection img, .acym__wysid__edit__languages__selection__check').off('click').on('click', function () {
      acym_editorWysidMultilingual.selectedLanguage = jQuery(this).parent().find('img').attr('acym-data-lang');
      if (acym_editorWysidMultilingual.selectedLanguage === 'main' && acym_editorWysidMultilingual.currentLanguage === 'main') return false;
      var currentSubject = jQuery('input[name="mail[subject]"]').val();
      var currentpreview = jQuery('input[name="mail[preheader]"]').val();
      var currentContent = jQuery('#editor_content').val();

      if (jQuery('#acym__wysid__edit__multilingual__creation').hasClass('is-hidden') && acym_helper.empty(currentSubject) && (!acym_helper.empty(currentpreview) || !acym_helper.empty(currentContent))) {
        if (acym_editorWysidMultilingual.selectedLanguage !== acym_editorWysidMultilingual.currentLanguage) {
          acym_helper.alert(ACYM_JS_TXT.ACYM_ENTER_SUBJECT);
        }

        return false;
      }

      if (acym_editorWysidMultilingual.selectedLanguage === acym_editorWysidMultilingual.currentLanguage && !acym_editorWysidMultilingual.forceReload) {
        return false;
      }

      acym_editorWysidMultilingual.forceReload = false;

      if (acym_editorWysidMultilingual.selectedLanguage === 'main') {
        jQuery('.acym__wysid__edit__preview__reset').addClass('is-hidden');
      } else {
        jQuery('.acym__wysid__edit__preview__reset').removeClass('is-hidden');
      } // Select the flag


      jQuery('.acym__wysid__edit__languages-selected').removeClass('acym__wysid__edit__languages-selected');
      jQuery('[acym-data-lang="' + acym_editorWysidMultilingual.selectedLanguage + '"]').closest('.acym__wysid__edit__languages__selection').addClass('acym__wysid__edit__languages-selected');
      var subject = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][subject]"]').val();
      var preview = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][preview]"]').val();
      var content = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][content]"]').val();
      var autosave = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][autosave]"]').val();
      var settings = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][settings]"]').val();
      var stylesheet = jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.selectedLanguage + '][stylesheet]"]').val();

      if (acym_editorWysidMultilingual.selectedLanguage !== 'main' && acym_helper.empty(subject) && acym_helper.empty(preview) && acym_helper.empty(content)) {
        jQuery(this).closest('.acym__content').find('> div').addClass('is-hidden');
        jQuery('#acym__wysid__edit__languages, #acym__wysid__edit__multilingual__creation').removeClass('is-hidden');
        acym_editorWysidMultilingual.switchLanguage('', '', '', '');
      } else {
        acym_editorWysidMultilingual.switchLanguage(subject, preview, content, autosave, settings, stylesheet);
        acym_editorWysidMultilingual.showEdition();
      }
    });
    jQuery('#acym__wysid__edit__multilingual__creation__default').off('click').on('click', function () {
      acym_editorWysidMultilingual.switchLanguage(jQuery('input[name="multilingual[main][subject]"]').val(), jQuery('input[name="multilingual[main][preview]"]').val(), jQuery('input[name="multilingual[main][content]"]').val(), '', jQuery('input[name="multilingual[main][settings]"]').val(), jQuery('input[name="multilingual[main][stylesheet]"]').val());
      acym_editorWysidMultilingual.showEdition();
    });
    jQuery('#acym__wysid__edit__multilingual__creation__scratch').off('click').on('click', function () {
      acym_editorWysidMultilingual.switchLanguage('', '', jQuery('#default_template').val(), '');
      acym_editorWysidMultilingual.showEdition();
    });
    jQuery('#acym__wysid__edit__preview__reset__content').off('click').on('click', function () {
      if (acym_helper.confirm(ACYM_JS_TXT.ACYM_RESET_TRANSLATION)) {
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][subject]"]').val('');
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][preview]"]').val('');
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][content]"]').val('');
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][settings]"]').val('');
        jQuery('input[name="multilingual[' + acym_editorWysidMultilingual.currentLanguage + '][stylesheet]"]').val('');
        jQuery('input[name="mail[subject]"]').val('');
        jQuery('input[name="mail[preheader]"]').val('');
        jQuery('#editor_content').val('');
        acym_editorWysidMultilingual.forceReload = true;
        var $currentFlag = jQuery('img[acym-data-lang="' + acym_editorWysidMultilingual.currentLanguage + '"]');
        $currentFlag.click().closest('.acym__wysid__edit__languages__selection').removeClass('acym__wysid__edit__languages__selection-done');
      }
    });
  },
  storeCurrentValues: function storeCurrentValues() {
    var saveStep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    // Make sure we're in a multilingual context
    var currentSubject = jQuery('input[name="mail[subject]"]').val();
    if (acym_helper.empty(currentSubject)) return true;
    jQuery('img[acym-data-lang="' + this.currentLanguage + '"]').closest('.acym__wysid__edit__languages__selection').addClass('acym__wysid__edit__languages__selection-done'); // Save the value of the 3 fields

    jQuery('input[name="multilingual[' + this.currentLanguage + '][subject]"]').val(currentSubject);
    jQuery('input[name="multilingual[' + this.currentLanguage + '][preview]"]').val(jQuery('input[name="mail[preheader]"]').val());
    jQuery('input[name="multilingual[' + this.currentLanguage + '][content]"]').val(jQuery('#editor_content').val());
    jQuery('input[name="multilingual[' + this.currentLanguage + '][autosave]"]').val(jQuery('#editor_autoSave').val());
    jQuery('input[name="multilingual[' + this.currentLanguage + '][settings]"]').val(jQuery('#editor_settings').val());
    jQuery('input[name="multilingual[' + this.currentLanguage + '][stylesheet]"]').val(jQuery('#editor_stylesheet').val());

    if (saveStep) {
      jQuery('img[acym-data-lang="main"]').click();
    }

    return true;
  },
  switchLanguage: function switchLanguage(newSubject, newPreview, newContent, newAutosave) {
    var settings = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
    var stylesheet = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';
    // Save the value of the 3 fields
    this.storeCurrentValues(); // Set the empty value for the 3 fields

    jQuery('input[name="mail[subject]"]').val(newSubject);
    jQuery('input[name="mail[preheader]"]').val(newPreview);
    jQuery('#editor_content').val(newContent);
    jQuery('#editor_autoSave').val(newAutosave);
    if (settings !== '') jQuery('#editor_settings').val(settings);
    if (settings !== '') jQuery('#editor_stylesheet').val(stylesheet);
    acym_editorWysidVersioning.checkForUnsavedVersion(); // Set the new current language

    this.currentLanguage = this.selectedLanguage;
  },
  showEdition: function showEdition() {
    jQuery('#acym__wysid__edit .acym__content > div').removeClass('is-hidden');
    jQuery('#acym__wysid__edit__multilingual__creation').addClass('is-hidden'); // Reload the content preview

    acym_helperPreview.loadIframe('acym__wysid__preview__iframe__acym__wysid__email__preview', false);
  },
  setClickStartFromTemplate: function setClickStartFromTemplate() {
    if (!acym_helperModal.isMultilingualEdition) return;
    jQuery('.acym__templates__oneTpl a').off('click').on('click', function (event) {
      event.preventDefault();
    });
    jQuery('.acym__templates__oneTpl').off('click').on('click', function (event) {
      var _this4 = this;

      event.preventDefault();
      var $loader = jQuery('.acym__template__choose__modal__loader');
      $loader.css('display', 'flex');
      var data = {
        ctrl: ACYM_IS_ADMIN ? 'mails' : 'frontmails',
        task: 'getMailByIdAjax',
        id: this.getAttribute('id')
      };
      acym_helper.get(ACYM_AJAX_URL, data).then(function (res) {
        if (res.error) {
          acym_helperNotification.addNotification(res.message, 'error', true);
          return;
        }

        acym_editorWysidMultilingual.switchLanguage(res.data.subject, res.data.preheader, res.data.body, '', res.data.settings, res.data.stylesheet);
        acym_editorWysidMultilingual.showEdition();
        jQuery(_this4).closest('#acym__template__choose__modal').find('.close-button').click();
        $loader.css('display', 'none');
      });
    });
  }
};
var acym_editorWysidNewContent = {
  addTitleWYSID: function addTitleWYSID(ui) {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div class="acym__wysid__tinymce--text">';
    content += '<h1 class="acym__wysid__tinymce--title--placeholder">&zwj;</h1>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    jQuery(ui).replaceWith(content);
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
    acym_editorWysidVersioning.setUndoAndAutoSave();
  },
  addTextWYSID: function addTextWYSID(ui) {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div class="acym__wysid__tinymce--text">';
    content += '<p class="acym__wysid__tinymce--text--placeholder">&zwj;</p>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    jQuery(ui).replaceWith(content);
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
    acym_editorWysidVersioning.setUndoAndAutoSave();
  },
  addMediaWysid: function addMediaWysid(ui) {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div class="acym__wysid__tinymce--image acym__wysid__media__inserted--focus">';
    content += '<p style="text-align: center" data-mce-style="text-align: center">';
    content += '<img class="acym__wysid__media__inserted" src="' + ACYM_MEDIA_URL + 'images/default_image.png" title="image" alt="" style="max-width: 100%; height: auto;  box-sizing: border-box; padding: 0 5px;display:inline-block; margin-left: auto; margin-right: auto;"/>';
    content += '</div>';
    content += '</p>';
    content += '</td>';
    content += '</tr>';
    jQuery(ui).replaceWith(content);
    jQuery('.acym__wysid__media__inserted--focus img').off('load').on('load', function () {
      var $editor = jQuery(this).closest('.acym__wysid__media__inserted--focus');
      $editor.removeClass('acym__wysid__media__inserted--focus');
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidVersioning.setUndoAndAutoSave();
      setTimeout(function () {
        $editor.find('p').click();
        jQuery('#acym__wysid__right__toolbar__block__tab').click();
      }, 200);
    });
  },
  addButtonWYSID: function addButtonWYSID(ui) {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div style="text-align: center;box-sizing: inherit;">';
    content += '<a class="acym__wysid__column__element__button acym__wysid__content-no-settings-style" style="background-color: #222222; color: white; padding: 25px 30px; max-width: 100%; overflow: unset; border: 1px solid white; text-overflow: ellipsis; text-align: center; text-decoration: none; word-break: break-all;display: inline-block; box-shadow: none;font-family: Arial; font-size: 14px; cursor: pointer; line-height: 1; border-radius: 0" href="#">Button</a>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    jQuery(ui).replaceWith(content);
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
    acym_editorWysidVersioning.setUndoAndAutoSave();
  },
  addFollowWYSID: function addFollowWYSID(ui) {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div style="text-align: center;">';
    content += '<p class="acym__wysid__column__element__follow" style="text-align: center; cursor: pointer; padding: 0;margin: 0;">';
    content += '<a class="acym__wysid__column__element__follow__facebook" href="">';
    content += '<img style="display: inline-block; max-width: 100%; height: auto;  box-sizing: border-box; width: 40px; padding: 3px;" src="' + acym_helperEditorWysid.socialMedia.facebook.src + '" width="40" alt="facebook">';
    content += '</a>';
    content += '<a class="acym__wysid__column__element__follow__twitter" href="">';
    content += '<img style="display: inline-block; max-width: 100%; height: auto;  box-sizing: border-box; width: 40px; padding: 3px;" src="' + acym_helperEditorWysid.socialMedia.twitter.src + '"  width="40" alt="twitter">';
    content += '</a>';
    content += '</p>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    jQuery(ui).replaceWith(content);
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
    acym_editorWysidVersioning.setUndoAndAutoSave();
  },
  addSpaceWYSID: function addSpaceWYSID(ui) {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td" style="height: 50px">';
    content += '<span class="acy-editor__space" style="display:block; padding: 0;margin: 0; height: 100%"></span>';
    content += '</td>';
    content += '</tr>';
    jQuery(ui).replaceWith(content);
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
    acym_editorWysidVersioning.setUndoAndAutoSave();
  },
  addVideoWYSID: function addVideoWYSID(ui) {
    acym_helperEditorWysid.$focusElement = jQuery(ui);
    acym_editorWysidNewContent.setModalVideoWYSID();
    jQuery('#acym__wysid__modal').css('display', 'inherit');
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  },
  addGiphyWYSID: function addGiphyWYSID(ui) {
    acym_helperEditorWysid.$focusElement = jQuery(ui);
    acym_editorWysidNewContent.setModalGiphyWYSID();
    jQuery('#acym__wysid__modal').css('display', 'inherit');
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  },
  addSeparatorWysid: function addSeparatorWysid(ui) {
    var content = '<tr class="acym__wysid__column__element acym__wysid__column__element__separator cursor-pointer" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<hr style="border-bottom: 3px solid black; width: 100%; border-top: none; border-left: none; border-right: none;" class="acym__wysid__row__separator">';
    content += '</td>';
    content += '</tr>';
    jQuery(ui).replaceWith(content);
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
    acym_editorWysidVersioning.setUndoAndAutoSave();
  },
  addShareWYSID: function addShareWYSID(ui) {
    var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
    content += '<td class="large-12 acym__wysid__column__element__td">';
    content += '<div class="acym__wysid__column__element__share acym__wysid__column__element__share--add acy" style="text-align: center; margin-top: 10px; margin-bottom: 10px;">';
    content += '<a style="display: inline-block" class="acym__wysid__column__element__share__social acym__wysid__column__element__share__facebook" href="' + acym_helperEditorWysid.socialMedia.facebook.link + '">';
    content += '<img style="vertical-align: middle; width: 30px; display: inline; margin-right: 5px;" src="' + acym_helperEditorWysid.socialMedia.facebook.src + '" alt="' + acym_helperEditorWysid.socialMedia.facebook.src + '">';
    content += '<span style="color: #303e46; vertical-align: middle; margin-right: 10px; font-size: 15px">' + acym_helperEditorWysid.socialMedia.facebook.text + '</span>';
    content += '</a>';
    content += '<a style="display: inline-block" class="acym__wysid__column__element__share__social acym__wysid__column__element__share__twitter" href="' + acym_helperEditorWysid.socialMedia.twitter.link + '">';
    content += '<img style="vertical-align: middle; width: 30px; display: inline; margin-right: 5px;" src="' + acym_helperEditorWysid.socialMedia.twitter.src + '" alt="' + acym_helperEditorWysid.socialMedia.twitter.src + '">';
    content += '<span style="color: #303e46; vertical-align: middle; margin-right: 10px; font-size: 15px">' + acym_helperEditorWysid.socialMedia.twitter.text + '</span>';
    content += '</a>';
    content += '</div>';
    content += '</td>';
    content += '</tr>';
    jQuery(ui).replaceWith(content);
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
    acym_editorWysidVersioning.setUndoAndAutoSave();
  },
  setModalGiphyWYSID: function setModalGiphyWYSID() {
    var content = '<div class="grid-container"><div class="cell grid-x align-center grid-padding-x">';
    content += '<img class="cell" id="acym__wysid__modal__giphy--image" src="' + ACYM_MEDIA_URL + 'images/giphy.png" alt="">';
    content += '<div class="cell grid-x grid-margin-x"><input class="cell auto" type="text" id="acym__wysid__modal__giphy--search" placeholder="' + ACYM_JS_TXT.ACYM_SEARCH_FOR_GIFS + '">';
    content += '<button type="button" class="cell shrink button button-secondary" id="acym__wysid__modal__giphy--search--button">' + ACYM_JS_TXT.ACYM_SEARCH_GIFS + '</button></div>';
    content += '<p class="cell text-center" id="acym__wysid__modal__giphy--low-res-message">' + ACYM_JS_TXT.ACYM_GIPHY_LOW_RES_TEXT + '</p>';
    content += '</div></div>';
    jQuery('#acym__wysid__modal__ui__fields').html(content);
    content = '<div class="grid-container acym__wysid__modal__giphy__results__container">';
    content += '<h3 class="cell text-center acym__title__primary__color" id="acym__wysid__modal__giphy--error_message" style="display: none"></h3>';
    content += '<div class="cell grid-x grid-padding-x grid-margin-x grid-margin-y margin-top-1" id="acym__wysid__modal__giphy--results"></div></div>';
    jQuery('#acym__wysid__modal__ui__display').html(content);
    content = '<div class="grid-container"><div class="cell grid-x align-right grid-padding-x">';
    content += '<button class="button" type="button" id="acym__wysid__modal__giphy--insert" disabled="disabled">' + ACYM_JS_TXT.ACYM_INSERT_GIF + '</button>';
    content += '</div></div>';
    jQuery('#acym__wysid__modal__ui__search').html(content);
    acym_editorWysidGiphy.makeNewResearch('');
    acym_editorWysidGiphy.insertGif();
  },
  setModalVideoWYSID: function setModalVideoWYSID() {
    var content = '<div class="grid-container">';
    content += '<div class="grid-x grid-padding-x grid-padding-y">';
    content += '<div class="auto cell"></div>';
    content += '<div class="small-3 medium-3 cell" style="display: inline-flex">';
    content += '<img alt="" style="display: block; margin: auto; max-height: 50px" src="' + ACYM_MEDIA_URL + 'images/vimeo.png">';
    content += '</div>';
    content += '<div class="small-3 medium-3 cell" style="display: inline-flex">';
    content += '<img alt="" style="display: block; margin: auto; max-height: 50px" src="' + ACYM_MEDIA_URL + 'images/youtube.png">';
    content += '</div>';
    content += '<div class="small-4 medium-3 cell" style="display: inline-flex; padding: 15px 0 0 30px;">';
    content += '<img alt="" style="display: block; margin: auto; max-height: 50px" src="' + ACYM_MEDIA_URL + 'images/dailymotion.png">';
    content += '</div>';
    content += '<div class="auto cell"></div>';
    content += '<div class="small-8 medium-10 cell">';
    content += '<input id="acym__wysid__modal__video__search" type="text" placeholder="Url">';
    content += '</div>';
    content += '<div class="small-4 medium-2 cell">';
    content += '<button type="button" id="acym__wysid__modal__video__load" class="button primary expanded " href="#">Load</button>';
    content += '</div>';
    content += '</div>';
    content += '</div>';
    jQuery('#acym__wysid__modal__ui__fields').html(content);
    content = '<div class="grid-container">';
    content += '<div class="grid-x grid-padding-x">';
    content += '<div id="acym__wysid__modal__video__result" class="medium-12 cell"></div>';
    content += '</div>';
    content += '</div>';
    jQuery('#acym__wysid__modal__ui__display').html(content);
    content = '<div class="grid-container">';
    content += '<div class="grid-x grid-padding-x">';
    content += '<div class="small-8 medium-10 cell"></div>';
    content += '<div class="small-4 medium-2 cell">';
    content += '<button type="button" id="acym__wysid__modal__video__insert" class="button primary expanded disabled" href="#">Insert</button>';
    content += '</div>';
    content += '</div>';
    content += '</div>';
    jQuery('#acym__wysid__modal__ui__search').html(content);
    var $loadBtn = jQuery('#acym__wysid__modal__video__load');
    var $insertBtn = jQuery('#acym__wysid__modal__video__insert');
    var $searchInput = jQuery('#acym__wysid__modal__video__search');
    var $result = jQuery('#acym__wysid__modal__video__result');
    $loadBtn.off('click').on('click', function () {
      var url = $searchInput.val();
      $insertBtn.unbind('click').click(function () {
        acym_helperEditorWysid.$focusElement.replaceWith('<tr class="acym__wysid__column__element"><td class="large-12 acym__wysid__column__element__td"><div class="acym__wysid__tinymce--image"><p>' + $result.html() + '</p></div></td></tr>');
        acym_editorWysidTinymce.addTinyMceWYSID();
        jQuery('#acym__wysid__modal').css('display', 'none');
        acym_editorWysidVersioning.setUndoAndAutoSave();
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
      });
      var youtubeId = url.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/);
      var dailymotionId = url.match(/^(?:(?:http|https):\/\/)?(?:www.)?(dailymotion\.com|dai\.ly)\/((video\/([^_]+))|(hub\/([^_]+)|([^\/_]+)))$/);
      var vimeoId = url.match(/^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/);

      if (youtubeId != null) {
        $result.html('<a href="https://www.youtube.com/watch?v=' + youtubeId[1] + '" target="_blank"><img alt="" src="https://img.youtube.com/vi/' + youtubeId[1] + '/0.jpg" style="max-width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display: block;margin-left: auto; margin-right: auto; float: none;"/></a>');
        $insertBtn.removeClass('disabled');
      } else if (dailymotionId != null) {
        if (dailymotionId !== null) {
          if (dailymotionId[4] !== undefined) {
            $result.html('<a href="https://www.dailymotion.com/video/' + dailymotionId[4] + '"><img alt="" src="https://www.dailymotion.com/thumbnail/video/' + dailymotionId[4] + '" style="max-width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display: block; margin-left: auto; margin-right: auto; float: none;"/></a>');
          } else {
            $result.html('<a href="https://www.dailymotion.com/video/' + dailymotionId[2] + '"><img alt="" src="https://www.dailymotion.com/thumbnail/video/' + dailymotionId[2] + '" style="max-width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display: block; margin-left: auto; margin-right: auto; float: none;"/></a>');
          }
        }

        $insertBtn.removeClass('disabled');
      } else if (vimeoId != null) {
        jQuery.ajax({
          url: 'https://www.vimeo.com/api/v2/video/' + vimeoId[5] + '.json',
          dataType: 'jsonp',
          success: function success(data) {
            $result.html('<a href="https://vimeo.com/' + vimeoId[5] + '"><img alt="" src="' + data[0].thumbnail_large + '" style="max-width: 100%; height: auto; box-sizing: border-box; padding: 0 5px; display: block; margin-left: auto; margin-right: auto; float: none;"/></a>');
            $insertBtn.removeClass('disabled');
          }
        });
      } else {
        $result.html('<div class="acym__wysid__error_msg" style="text-align: center; margin-top: 100px;">' + ACYM_JS_TXT.ACYM_NON_VALID_URL + '</div>');
        $insertBtn.addClass('disabled').off('click');
      }

      $result.unbind('click').click(function (e) {
        e.preventDefault();
      });
    });
    $searchInput.keyup(function (e) {
      var code = e.which;
      if (code == 13) e.preventDefault();

      if (code == 13 || code == 188 || code == 186) {
        $loadBtn.click();
      }
    });
  }
};
var acym_editorWysidNewRow = {
  addRow1WYSID: function addRow1WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-12 large-12 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
    acym_editorWysidVersioning.setUndoAndAutoSave();
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  },
  addRow2WYSID: function addRow2WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-6 large-6 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-6 large-6 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
    acym_editorWysidVersioning.setUndoAndAutoSave();
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  },
  addRow3WYSID: function addRow3WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
    acym_editorWysidVersioning.setUndoAndAutoSave();
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  },
  addRow4WYSID: function addRow4WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-3 large-3 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-3 large-3 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-3 large-3 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-3 large-3 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
    acym_editorWysidVersioning.setUndoAndAutoSave();
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  },
  addRow5WYSID: function addRow5WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-8 large-8 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
    acym_editorWysidVersioning.setUndoAndAutoSave();
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  },
  addRow6WYSID: function addRow6WYSID(ui) {
    var content = '<table class="row acym__wysid__row__element" bgcolor="#ffffff" style="background-color: rgb(255, 255, 255);" cellpadding="0">';
    content += '<tbody>';
    content += '<tr>';
    content += '<th class="small-12 medium-4 large-4 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '<th class="small-12 medium-8 large-8 columns acym__wysid__row__element__th" valign="top">';
    content += '<table class="acym__wysid__column" border="0" cellpadding="0" cellspacing="0"><tbody></tbody></table>';
    content += '</th>';
    content += '</tr>';
    content += '</tbody>';
    content += '</table>';
    jQuery(ui).replaceWith(content);
    acym_editorWysidVersioning.setUndoAndAutoSave();
    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  }
};
var acym_editorWysidNotifications = {
  hideNotification: function hideNotification() {
    jQuery('#acym__wysid__top-toolbar__notification').removeClass('acym__toolbar__message__visible');
    jQuery('#acym__wysid__top-toolbar__notification__message').html('');
    jQuery('#acym__wysid__top-toolbar__actions').show();
    jQuery('#acym__wysid__top-toolbar__notification__close').show();
  },
  addEditorNotification: function addEditorNotification(notification, timeout, hideCloseButton, displayValidateButton) {
    timeout = undefined === timeout ? false : timeout;
    hideCloseButton = undefined === hideCloseButton ? false : hideCloseButton;
    displayValidateButton = undefined === displayValidateButton ? false : displayValidateButton;
    var classes = '';

    if (notification.level === 'success') {
      classes = 'acymicon-check-circle';
    } else if (notification.level === 'info') {
      classes = 'acymicon-bell';
    } else if (notification.level === 'warning') {
      classes = 'acymicon-exclamation-triangle';
    } else {
      classes = 'acymicon-exclamation-circle';
    }

    var $toolbar = jQuery('#acym__wysid__top-toolbar');
    var $toolbarMessage = $toolbar.find('#acym__wysid__top-toolbar__notification');
    $toolbar.find('#acym__wysid__top-toolbar__actions').hide();
    $toolbarMessage.addClass('acym__toolbar__message__visible').find('#acym__wysid__top-toolbar__notification__icon').addClass(classes);
    $toolbarMessage.find('#acym__wysid__top-toolbar__notification__message').html(notification.message);
    $toolbarMessage.find('#acym__wysid__top-toolbar__notification__close').off('click').on('click', function () {
      acym_editorWysidNotifications.hideNotification();
    });
    if (hideCloseButton) $toolbarMessage.find('#acym__wysid__top-toolbar__notification__close').hide();
    if (!displayValidateButton) $toolbarMessage.find('#acym__wysid__top-toolbar__keep').hide();

    if (timeout) {
      setTimeout(function () {
        acym_editorWysidNotifications.hideNotification();
      }, timeout);
    }
  }
};
var acym_editorWysidOutlook = {
  setButtonOutlook: function setButtonOutlook($element) {
    var borderRadius;

    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {
      borderRadius = $element.css('borderBottomLeftRadius');
    } else {
      borderRadius = $element.css('borderRadius');
    }

    borderRadius = ' arcsize="' + parseInt(borderRadius.replace(/[^-\d\.]/g, '')) * 2 + '%"';
    var borderColor;
    var borderWidth = $element.css('border-top-width');

    if (borderWidth.indexOf('0') === 0) {
      borderColor = ' strokecolor="' + $element.css('background-color') + '"';
      borderWidth = '0';
    } else {
      borderColor = ' strokecolor="' + $element.css('border-top-color') + '"';
    }

    borderWidth = ' strokeweight="' + borderWidth + '"';
    var backgroundColor = ' fillcolor="' + $element.css('background-color') + '"';
    var href = ' href="' + $element.attr('href') + '"';
    var widthButton = $element.outerWidth();
    var cssRoundrect = 'style="width: ' + widthButton + '; height:' + $element.css('height').replace(/[^-\d\.]/g, '') + ';v-text-anchor:middle;"';
    var css = 'color :' + $element.css('color') + '; font-family:' + $element.css('font-family') + '; font-size:' + $element.css('font-size') + ';';
    var text = $element.html();
    return '<!--[if mso]><v:roundrect xmlns:v="urn:schemas-microsoft-com:vml" xmlns:w="urn:schemas-microsoft-com:office:word"' + cssRoundrect + href + borderRadius + borderColor + borderWidth + backgroundColor + '><w:anchorlock/><center style="' + css + '">' + text + '</center></v:roundrect><![endif]--><!--[if !mso]> -->';
  },
  setBackgroundOutlook: function setBackgroundOutlook($table) {
    var start = '<!--[if gte mso 9]><v:rect xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" style="width: ' + $table.width() + 'px;height: ' + $table.height() + 'px"><v:fill type="frame" src="' + $table.css('background-image') + '" /><v:textbox inset="0,0,0,0"><![endif]-->';
    var end = '<!--[if gte mso 9]></v:textbox></v:rect><![endif]-->';
    start = start.replace('url("', '').replace('")', '');
    $table.prepend(start).append(end);
  }
};
var acym_editorWysidRowSelector = {
  setRowSelector: function setRowSelector() {
    setTimeout(function () {
      if (jQuery('.mce-tinymce-inline').is(':visible')) return true;
      jQuery('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
      jQuery('.acym__wysid__row__element').css('z-index', '100').each(function () {
        var $firstTbody = jQuery(this).find('> tbody');

        if ($firstTbody.css('background-color') !== '' && $firstTbody.css('background-color') !== undefined && $firstTbody.css('background-color') !== 'inherit' && $firstTbody.css('background-color') !== 'rgba(0, 0, 0, 0)') {
          jQuery(this).css('background-color', $firstTbody.css('background-color'));
          $firstTbody.css('background-color', 'inherit').attr('bgcolor', '');
        }

        jQuery(this).prepend('<div class="acym__wysid__row__selector"></div>');
      });
      var $template = jQuery('.acym__wysid__template__content');
      var widthTemplate = $template.css('width').replace(/[^-\d\.]/g, '');
      var offsetTemplate = $template.offset();
      jQuery('.acym__wysid__row__selector').each(function () {
        var $parentSelector = jQuery(this).closest('.acym__wysid__row__element');
        var offsetTable = $parentSelector.offset();
        var borderWidthParent = $parentSelector.css('border-width') === '' ? 0 : parseInt($parentSelector.css('border-width').replace(/[^-\d\.]/g, ''));
        var paddingBottomParent = $parentSelector.css('padding-bottom') === '' ? 0 : parseInt($parentSelector.css('padding-bottom').replace(/[^-\d\.]/g, ''));
        var heightSelector = $parentSelector.height() + parseInt($parentSelector.css('padding-top').replace(/[^-\d\.]/g, '')) + paddingBottomParent + borderWidthParent * 2;
        var leftSelector = '-' + (Math.round(offsetTable.left) - Math.round(offsetTemplate.left) + borderWidthParent) + 'px';
        jQuery(this).css({
          width: widthTemplate + 'px',
          height: heightSelector,
          left: leftSelector,
          top: 0 - borderWidthParent + 'px'
        });
        jQuery(this).attr('style', jQuery(this).attr('style') + 'width: ' + widthTemplate + 'px; height: ' + heightSelector + 'px; left: ' + leftSelector + ';top: ' + (0 - borderWidthParent + 'px'));
        var contentToolbox = '<div  class="acym__wysid__row__toolbox">';
        contentToolbox += '<i class="acymicon-content_copy acym__wysid__row__toolbox__copy acym__wysid__row__toolbox__actions"></i>';
        contentToolbox += '<i class="acymicon-arrows acym__wysid__row__element__toolbox__move acym__wysid__row__toolbox__actions"></i>';
        contentToolbox += '<i class="acymicon-delete acym__wysid__row__toolbox__actions acym__wysid__row__toolbox__delete__row"></i>';
        contentToolbox += '</div>';
        contentToolbox += '<div class="acym__wysid__row__height__container">';
        contentToolbox += '<i class="acymicon-code acym__wysid__row__toolbox__height"></i>';
        contentToolbox += '</div>';
        jQuery(this).append(contentToolbox);
      });
      jQuery('.acym__wysid__column__element').each(function () {
        var contentToolboxElement = '<div class="acym__wysid__element__toolbox">';
        contentToolboxElement += '<i class="acymicon-content_copy acym__wysid__element__toolbox__copy acym__wysid__element__toolbox__actions"></i>';
        contentToolboxElement += '<i class="acymicon-arrows acym__wysid__column__element__toolbox__move acym__wysid__element__toolbox__actions"></i>';
        contentToolboxElement += '<i class="acymicon-delete acym__wysid__element__toolbox__actions acym__wysid__element__toolbox__delete"></i>';
        contentToolboxElement += '</div>';
        jQuery(this).append(contentToolboxElement);
      });
      acym_editorWysidToolbox.setRefreshAfterToolbox();
      acym_editorWysidContextModal.setBlockContextModalWYSID();
    }, 150);
  }
};
var acym_editorWysidTest = {
  toggleSendTest: function toggleSendTest() {
    var $sendTestContainer = jQuery('#acym__wysid__send__test');
    var $rightToolbar = jQuery('#acym__wysid__right-toolbar');
    jQuery('#acym__wysid__test__button').off('click').on('click', function () {
      acym_editorWysidTest.toggleSendTestAndRightToolbar($sendTestContainer, $rightToolbar);
      jQuery(window).on('mousedown', function (event) {
        if (jQuery(event.target).closest('#acym__wysid__send__test').length > 0) return true;
        acym_editorWysidTest.toggleSendTestAndRightToolbar($sendTestContainer, $rightToolbar);
      });
    });
    jQuery('.acym__wysid__send__test-close').off('click').on('click', function () {
      acym_editorWysidTest.toggleSendTestAndRightToolbar($sendTestContainer, $rightToolbar);
    });
  },
  toggleSendTestAndRightToolbar: function toggleSendTestAndRightToolbar($sendTestContainer, $rightToolbar) {
    jQuery(window).off('mousedown');

    if ($sendTestContainer.hasClass('acym__wysid__show')) {
      $sendTestContainer.removeClass('acym__wysid__show');
      $rightToolbar.removeClass('acym__wysid__hidden');
    } else {
      $sendTestContainer.addClass('acym__wysid__show');
      $rightToolbar.addClass('acym__wysid__hidden');
    }
  },
  sendTestAjax: function sendTestAjax() {
    jQuery('#acym__wysid__send__test__button').off('click').on('click', function () {
      jQuery(this).attr('disabled', 'true');
      jQuery('.acym__wysid__send__test__icon').hide();
      jQuery('.acym__wysid__send__test__icon__loader').show();

      if (jQuery('[name="ctrl"]').val().indexOf('campaigns') !== -1) {
        acym_editorWysidFormAction.saveTemplate(true, false);
        return true;
      }

      acym_editorWysidFormAction.setThumbnailPreSave().then(function (dataUrl) {
        // Copy img content in hidden input
        jQuery('#editor_thumbnail').attr('value', dataUrl);
        acym_editorWysidFormAction.saveTemplate(true, false);
      })["catch"](function (err) {
        acym_editorWysidFormAction.saveTemplate(true, false);
        console.error('Error generating template thumbnail: ' + err);
      });
      return true;
    });
  },
  sendTest: function sendTest(id) {
    var url = ACYM_AJAX_URL;
    url += '&page=acymailing_mails';
    url += '&ctrl=' + acym_helper.ctrlMails;
    url += '&task=sendTest';
    url += '&id=' + id;
    url += '&controller=' + jQuery('[name="ctrl"]').val();
    url += '&test_note=' + encodeURIComponent(jQuery('#acym__wysid__send__test__note').val());

    if (ACYM_IS_ADMIN) {
      url += '&test_emails=' + encodeURIComponent(jQuery('.acym__multiselect__email').val().join(','));
    } else {
      url += '&test_emails=' + encodeURIComponent(jQuery('input[name="emails_test"]').val());
    }

    url += '&lang_version=' + acym_editorWysidMultilingual.currentLanguage;
    jQuery.post(url, function (res) {
      res = acym_helper.parseJson(res);
      res.message = res.message.replace(/<.*?>/gm, ' ');
      var error = res.level === 'error';
      acym_editorWysidNotifications.addEditorNotification(res, error ? false : 3000, !error);
      jQuery('.acym__wysid__send__test__icon').show();
      jQuery('.acym__wysid__send__test__icon__loader').hide();
      jQuery('#acym__wysid__send__test__button').removeAttr('disabled');
      if (res.level === 'info') jQuery('.acym__wysid__send__test-close').click();
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
    });
  }
};
var acym_editorWysidTinymce = {
  addTinyMceWYSID: function addTinyMceWYSID() {
    tinymce.remove();
    tinymce.baseURL = ACYM_MEDIA_URL + 'js/tinymce';
    tinymce.init({
      convert_urls: false,
      relative_urls: false,
      selector: '.acym__wysid__tinymce--text',
      inline: true,
      menubar: false,
      plugins: 'textcolor colorpicker lists link code acydtext noneditable lineheight table',
      image_class_list: [{
        title: 'Responsive',
        value: 'img-responsive'
      }],
      fixed_toolbar_container: '#acym__wysid__text__tinymce__editor',
      fontsize_formats: '10px=10px 12px=12px 14px=14px 16px=16px 18px=18px 20px=20px 22px=22px 24px=24px 26px=26px 28px=28px 30px=30px 32px=32px 34px=34px 36px=36px',
      toolbar: ['undo redo formatselect fontselect fontsizeselect | alignmentsplit | listsplit lineheightselect | table', 'bold italic underline strikethrough removeformat | forecolor backcolor | link unlink | code | acydtext'],
      link_class_list: [{
        title: 'None',
        value: ''
      }, {
        title: ACYM_JS_TXT.ACYM_DONT_APPLY_STYLE_TAG_A,
        value: 'acym__wysid__content-no-settings-style'
      }],
      formats: {
        removeformat: [{
          selector: 'b,strong,em,i,font,u,strike,pre,code',
          remove: 'all',
          split: true,
          expand: false,
          block_expand: true,
          deep: true
        }, {
          selector: 'span',
          attributes: ['style', 'class'],
          remove: 'empty',
          split: true,
          expand: false,
          deep: true
        }, {
          selector: '*',
          attributes: ['style', 'class'],
          split: false,
          expand: false,
          deep: true
        }]
      },
      preview_styles: false,
      block_formats: 'Paragraph=p;Heading 1=h1;Heading 2=h2;Heading 3=h3;Heading 4=h4;Heading 5=h5;Heading 6=h6',
      init_instance_callback: function init_instance_callback(editor) {
        acym_editorWysidDynammic.setDynamicsActions();
        editor.on('keydown', function (e) {
          var currentText = jQuery(editor.getElement()).find('>:first-child');

          if (acym_editorWysidTinymce.isCurrentTextEmpty(currentText) && e.which === 8) {
            e.preventDefault();
            return true;
          }
        });
        editor.on('keyup', function () {
          var currentText = jQuery(editor.getElement()).find('>:first-child');

          if (acym_editorWysidTinymce.isCurrentTextEmpty(currentText)) {
            currentText.addClass('acym__wysid__tinymce--text--placeholder acym__wysid__tinymce--text--placeholder--empty');
          } else {
            currentText.removeClass('acym__wysid__tinymce--text--placeholder--empty');
          }

          acym_editorWysidTinymce.checkForEmptyText();
        });
        editor.on('click', function () {
          acym_editorWysidToolbox.setDeleteAlltoolbox();
        });
        editor.off('change').on('change', function (e) {
          acym_editorWysidFontStyle.setAllHtmlElementStyleWYSID();
        });
        editor.on('blur', function (e) {
          var initialContent = e.target.startContent;
          var finalContent = e.target.bodyElement.innerHTML;
          if (initialContent !== finalContent) acym_editorWysidVersioning.setUndoAndAutoSave();
          acym_editorWysidRowSelector.setRowSelector();
          acym_editorWysidTinymce.checkForEmptyText();
        });
        editor.on('ExecCommand', function (e) {
          var currentText = jQuery(editor.getElement()).find('>:first-child');

          if (e.command == 'mceTableDelete' && acym_editorWysidTinymce.isCurrentTextEmpty(currentText)) {
            e.target.bodyElement.innerHTML = '<p class="acym__wysid__tinymce--text--placeholder">&zwj;</p>';
            jQuery(':focus').blur();
          }
        });
        editor.on('BeforeSetContent', function (e) {
          if (e.content.indexOf('<table id="__mce"') == 0) {
            var currentText = jQuery(editor.getElement()).find('>:first-child');

            if (acym_editorWysidTinymce.isCurrentTextEmpty(currentText)) {
              currentText.remove();
            }

            var sUsrAg = navigator.userAgent;

            if (sUsrAg.indexOf('Firefox') > -1) {
              acym_editorWysidTinymce.cleanForFirefox(jQuery(editor.getElement()), 0);
            }
          }
        });
        editor.addButton('listsplit', {
          type: 'splitbutton',
          text: '',
          icon: 'bullist',
          onclick: function onclick(e) {
            tinyMCE.execCommand(this.value);
          },
          menu: [{
            icon: 'bullist',
            text: 'Bullet list',
            onclick: function onclick() {
              tinyMCE.execCommand('InsertUnorderedList');
              this.parent().parent().icon('bullist');
              this.parent().parent().value = 'InsertUnorderedList';
            }
          }, {
            icon: 'numlist',
            text: 'Ordered List',
            onclick: function onclick() {
              tinyMCE.execCommand('InsertOrderedList');
              this.parent().parent().icon('numlist');
              this.parent().parent().value = 'InsertOrderedList';
            }
          }],
          onPostRender: function onPostRender() {
            // Select the first item by default
            this.value = 'InsertUnorderedList';
          }
        });
        editor.addButton('alignmentsplit', {
          type: 'splitbutton',
          text: '',
          icon: 'alignleft',
          onclick: function onclick(e) {
            tinyMCE.execCommand(this.value);
          },
          menu: [{
            icon: 'alignleft',
            text: 'Align Left',
            onclick: function onclick() {
              tinyMCE.execCommand('JustifyLeft');
              this.parent().parent().icon('alignleft');
              this.parent().parent().value = 'JustifyLeft';
            }
          }, {
            icon: 'alignright',
            text: 'Align Right',
            onclick: function onclick() {
              tinyMCE.execCommand('JustifyRight');
              this.parent().parent().icon('alignright');
              this.parent().parent().value = 'JustifyRight';
            }
          }, {
            icon: 'aligncenter',
            text: 'Align Center',
            onclick: function onclick() {
              tinyMCE.execCommand('JustifyCenter');
              this.parent().parent().icon('aligncenter');
              this.parent().parent().value = 'JustifyCenter';
            }
          }, {
            icon: 'alignjustify',
            text: 'Justify',
            onclick: function onclick() {
              tinyMCE.execCommand('JustifyFull');
              this.parent().parent().icon('alignjustify');
              this.parent().parent().value = 'JustifyFull';
            }
          }],
          onPostRender: function onPostRender() {
            // Select the first item by default
            this.value = 'JustifyLeft';
          }
        });
      }
    });
    tinymce.execCommand('mceAddEditor', true, '');
    tinymce.init({
      selector: '.acym__wysid__tinymce--image',
      inline: true,
      menubar: false,
      plugins: 'image nonbreaking',
      toolbar: [],
      relative_urls: false,
      remove_script_host: false,
      image_class_list: [{
        title: 'Responsive',
        value: 'img-responsive'
      }],
      preview_styles: false,
      init_instance_callback: function init_instance_callback(editor) {
        acym_editorWysidImage.setDoubleClickImage();
        editor.on('click', function (e) {
          var $img = jQuery(editor.getElement()).find('img');
          acym_helperEditorWysid.timeClickImage = new Date().getTime();
          acym_editorWysidToolbox.setDeleteAlltoolbox();
          acym_editorWysidContextModal.setImageContextModal($img);
        });
        editor.on('blur', function () {
          acym_editorWysidRowSelector.setRowSelector();
          acym_helperEditorWysid.removeBlankCharacters();
        });
      },
      formats: {
        alignleft: {
          selector: 'img',
          styles: {
            "float": 'left',
            marginTop: '-10px',
            marginBottom: '10px'
          }
        },
        alignright: {
          selector: 'img',
          styles: {
            "float": 'right',
            marginTop: '-10px',
            marginBottom: '10px'
          }
        }
      },
      style_formats: [{
        title: 'Align left',
        format: 'alignleft'
      }, {
        title: 'Align right',
        format: 'alignright'
      }],
      themes: 'modern'
    });
    tinymce.execCommand('mceAddEditor', true, '');
  },
  isCurrentTextEmpty: function isCurrentTextEmpty(currentText) {
    return currentText.is(':empty') || currentText.html() === '&nbsp;<br>' || currentText.html() === '<br>' || escape(currentText.html()) == '%u200D' || currentText.html() == '<br data-mce-bogus="1">';
  },
  checkForEmptyText: function checkForEmptyText() {
    jQuery('.acym__wysid__tinymce--text--placeholder, .acym__wysid__tinymce--title--placeholder').each(function () {
      var severalTags = jQuery(this).closest('.acym__wysid__tinymce--text').find('.acym__wysid__tinymce--text--placeholder, .acym__wysid__tinymce--title--placeholder').length > 1;

      if (acym_editorWysidTinymce.isCurrentTextEmpty(jQuery(this)) && !severalTags) {
        jQuery(this).addClass('acym__wysid__tinymce--text--placeholder acym__wysid__tinymce--text--placeholder--empty');
      } else {
        jQuery(this).removeClass('acym__wysid__tinymce--text--placeholder--empty');
      }
    });
  },
  cleanForFirefox: function cleanForFirefox(currentArea, timerTotal) {
    var tinymceP = currentArea.find('>p');

    if (tinymceP.length == 0 && timerTotal < 1000) {
      setTimeout(function () {
        acym_editorWysidTinymce.cleanForFirefox(currentArea, timerTotal + 50);
      }, 50);
    } else if (tinymceP.length == 1 && acym_editorWysidTinymce.isCurrentTextEmpty(tinymceP)) {
      tinymceP.remove();
    }
  }
};
var acym_editorWysidToolbar = {
  setRightToolbarWYSID: function setRightToolbarWYSID() {
    jQuery('.acym__wysid__right__toolbar__tabs').off('click').on('click', function () {
      acym_editorWysidToolbar.setSlideRightToolbarWYSID(jQuery(this));
    });
    jQuery('.acym__wysid__right__toolbar--menu .acym__wysid__right__toolbar__p').off('click').on('click', function () {
      jQuery(this).next().slideToggle(200);

      if (jQuery(this).hasClass('acym__wysid__right__toolbar__p__open')) {
        jQuery(this).removeClass('acym__wysid__right__toolbar__p__open');
        jQuery(this).find('i').removeClass('acymicon-keyboard_arrow_up').addClass('acymicon-keyboard_arrow_down');
      } else {
        jQuery(this).addClass('acym__wysid__right__toolbar__p__open');
        jQuery(this).find('i').removeClass('acymicon-keyboard_arrow_down').addClass('acymicon-keyboard_arrow_up');
      }

      jQuery(this).toggleClass('acym__wysid__right__toolbar__last--text');
    });
  },
  setSlideRightToolbarWYSID: function setSlideRightToolbarWYSID($clickedTab) {
    var $elementToHide = jQuery('#' + jQuery('.acym__wysid__right__toolbar__selected').attr('data-attr-show'));
    var $elementToShow = jQuery('#' + $clickedTab.attr('data-attr-show'));
    if ($elementToHide.attr('id') === $elementToShow.attr('id')) return;
    var $tabs = jQuery('.acym__wysid__right__toolbar__tabs');
    $tabs.removeClass('acym__wysid__right__toolbar__selected');
    var direction = {
      hide: '',
      show: ''
    };
    $tabs.each(function () {
      if (jQuery(this).attr('data-attr-show') === $elementToHide.attr('id')) {
        direction.hide = 'left';
        direction.show = 'right';
        return false;
      }

      if (jQuery(this).attr('data-attr-show') === $elementToShow.attr('id')) {
        direction.hide = 'right';
        direction.show = 'left';
        return false;
      }
    });
    $clickedTab.addClass('acym__wysid__right__toolbar__selected');
    $elementToHide.hide('slide', {
      direction: direction.hide
    }, 75, function () {
      $elementToShow.show('slide', {
        direction: direction.show
      }, 75, function () {
        acym_editorWysidToolbar.setRightToolbarWYSID();
      });
    });
  }
};
var acym_editorWysidToolbox = {
  setRefreshAfterToolbox: function setRefreshAfterToolbox() {
    jQuery('.acym__wysid__row__toolbox__copy').unbind('click').click(function () {
      acym_helperBlockSeparator.changeIdOnduplicate(jQuery(this).closest('.acym__wysid__row__element').clone()).insertAfter(jQuery(this).closest('.acym__wysid__row__element'));
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidVersioning.setUndoAndAutoSave();
    });
    jQuery('.acym__wysid__row__toolbox__delete__row').off('click').on('click', function () {
      jQuery(this).closest('.acym__wysid__row__element').remove();
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidVersioning.setUndoAndAutoSave();
    });
    jQuery('.acym__wysid__element__toolbox__copy').off('click').on('click', function () {
      var $elementToClone = jQuery(this).closest('.acym__wysid__column__element');
      var theClone = $elementToClone.clone(); // Handle the duplication of DContents with unique IDs

      if (theClone.attr('data-dynamic') !== undefined) {
        theClone.attr('id', acym_editorWysidDynammic.getUniqueId());
      }

      theClone.insertAfter($elementToClone);
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidVersioning.setUndoAndAutoSave();
    });
    jQuery('.acym__wysid__element__toolbox__delete').off('click').on('click', function () {
      var $elementToDelete = jQuery(this).closest('.acym__wysid__column__element');
      acym_editorWysidContextModal.hideContextModal(jQuery('.acym__wysid__context__modal'));
      $elementToDelete.remove();
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      acym_editorWysidVersioning.setUndoAndAutoSave();
    });
    acym_editorWysidToolbox.resizeRows();
    acym_editorWysidDragDrop.setRowElementSortableWYSID();
    acym_editorWysidDragDrop.setColumnElementDraggableWYSID();
  },
  resizeRows: function resizeRows() {
    jQuery('.acym__wysid__row__toolbox__height').off('mousedown').on('mousedown', function () {
      acym_helperEditorWysid.clicking = true;
      acym_helperEditorWysid.$resizingElement = jQuery(this).closest('table').css({
        'border-collapse': 'initial',
        'border-spacing': ''
      });
      jQuery(document).on('mousemove', function (event) {
        if (acym_helperEditorWysid.clicking) {
          var delta = acym_helperEditorWysid.$resizingElement.offset().top;
          var height = event.pageY - (delta - 10);
          acym_helperEditorWysid.$resizingElement.find('th:first').height(height).attr('height', height);
          acym_helperEditorWysid.$resizingElement.find('.acym__wysid__row__selector').css('height', acym_helperEditorWysid.$resizingElement.css('height'));
        }
      });
      jQuery(document).off('mouseup').on('mouseup', function () {
        acym_helperEditorWysid.clicking = false;
        jQuery(this).off('mousdown');
        acym_editorWysidRowSelector.setRowSelector();
      });
    });
  },
  setDeleteAlltoolbox: function setDeleteAlltoolbox() {
    jQuery('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
  }
};
var acym_editorWysidVersioning = {
  keepOldVersion: function keepOldVersion(autoSave) {
    var autoSaveWithTmplDiv = '<div id="acym__wysid__template" class="cell">' + autoSave + '</div>';
    jQuery('#editor_autoSave').val('');
    jQuery('#acym__wysid__top-toolbar__keep').off('click').on('click', function () {
      jQuery('.acym__wysid__hidden__save__content').val(autoSaveWithTmplDiv);
      jQuery('#acym__wysid #acym__wysid__template').replaceWith(autoSaveWithTmplDiv);
      acym_helperEditorWysid.setColumnRefreshUiWYSID();
      jQuery('#acym__wysid__top-toolbar__notification__close').click();
    });
  },
  setUndoAndAutoSave: function setUndoAndAutoSave() {
    var initEdit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    // If the user edits the email while the auto-saved message is still there, remove it
    if (!initEdit && jQuery('.acym__autosave__notification').length) acym_editorWysidNotifications.hideNotification();
    var $templateVersion = jQuery('[id^="template_version_"]');
    if ($templateVersion.length >= 10) $templateVersion[0].remove();
    var currentVersion = acym_helperEditorWysid.versionControl + 1;

    while (jQuery('#template_version_' + currentVersion).length > 0) {
      jQuery('#template_version_' + currentVersion).remove();
      currentVersion++;
    }

    acym_helperEditorWysid.versionControl++;
    jQuery('[name^="mce_"]').remove();
    jQuery('.acym__wysid__column--drag-start').removeClass('acym__wysid__column--drag-start');
    jQuery('.acym__editor__area').append('<input type="hidden" value="" id="template_version_' + acym_helperEditorWysid.versionControl + '">');
    var $template = jQuery('#acym__wysid__template');
    var template = $template.html();
    if (jQuery('#template_version_' + (acym_helperEditorWysid.versionControl - 1)).val() === template) return false;
    jQuery('#template_version_' + acym_helperEditorWysid.versionControl).val(template); // Auto save

    var $campaignID = jQuery('#acym__campaign__recipients__form__campaign');

    if (0 === $campaignID.length || $campaignID.length > 0 && '0' !== $campaignID.val()) {
      var $contentSave = $template.clone();
      $contentSave.find('.acym__wysid__row__selector, .acym__wysid__element__toolbox').remove();
      $contentSave.find('.acym__wysid__tinymce--text--placeholder--empty').removeClass('acym__wysid__tinymce--text--placeholder--empty');
      $contentSave = $contentSave.wrap('<div id="acym__wysid__template-save" class="cell">').html();
      var mailid = jQuery('#editor_mailid').val();

      if (!acym_helper.empty(mailid) && mailid !== '-1' && false === initEdit) {
        var ajaxUrl = ACYM_AJAX_URL + '&ctrl=' + acym_helper.ctrlMails + '&task=autoSave';
        ajaxUrl += '&language=' + acym_editorWysidMultilingual.currentLanguage;
        jQuery.ajax({
          type: 'POST',
          url: ajaxUrl,
          data: {
            autoSave: $contentSave,
            mailId: mailid
          },
          success: function success(res) {},
          error: function error() {
            console.log(ACYM_JS_TXT.ACYM_ERROR_SAVING);
          }
        });
      }
    }
  },
  checkForUnsavedVersion: function checkForUnsavedVersion() {
    var autoSave = jQuery('#editor_autoSave').val();

    if (undefined != autoSave && '' != autoSave) {
      acym_editorWysidNotifications.addEditorNotification({
        'message': '<div class="cell auto acym__autosave__notification">' + ACYM_JS_TXT.ACYM_AUTOSAVE_USE + '</div>',
        'level': 'info'
      }, false, false, true);
      acym_editorWysidVersioning.keepOldVersion(autoSave);
    }
  },
  setVersionControlCtrlZ: function setVersionControlCtrlZ() {
    jQuery(document).keydown(function (e) {
      if (jQuery('#acym__wysid__editor__source').height() > 0 || undefined !== tinyMCE.focusedEditor && null !== tinyMCE.focusedEditor || jQuery('#acym__wysid__context__button').is(':visible') || jQuery('#acym__wysid__context__follow').is(':visible') || jQuery('#acym__wysid__context__separator').is(':visible') || jQuery('#acym__wysid__context__share').is(':visible')) {
        return;
      }

      if (e.which !== 90 || !e.ctrlKey && !e.metaKey || acym_helperEditorWysid.versionControl <= 0) return;

      if (!e.shiftKey) {
        acym_editorWysidVersioning.makeVersionControlChangement(true);
      } else if (e.shiftKey) {
        acym_editorWysidVersioning.makeVersionControlChangement(false);
      }
    });
    jQuery('#acym__wysid__top-toolbar__undo').off('click').on('click', function () {
      acym_editorWysidVersioning.makeVersionControlChangement(true);
    });
    jQuery('#acym__wysid__top-toolbar__redo').off('click').on('click', function () {
      acym_editorWysidVersioning.makeVersionControlChangement(false);
    });
  },
  makeVersionControlChangement: function makeVersionControlChangement(undo) {
    var $templateVersionPlus = jQuery('#template_version_' + (acym_helperEditorWysid.versionControl + 1));
    var $templateVersionMinus = jQuery('#template_version_' + (acym_helperEditorWysid.versionControl - 1));

    if (undo) {
      if ($templateVersionMinus.length > 0 && $templateVersionMinus.val().length === 0) return;
      acym_helperEditorWysid.versionControl--;
      jQuery('#acym__wysid__template').html(jQuery('#template_version_' + acym_helperEditorWysid.versionControl).val());
      if (acym_helperEditorWysid.versionControl === 0) acym_editorWysidVersioning.setUndoAndAutoSave();
    } else {
      if ($templateVersionPlus.length > 0 && $templateVersionPlus.val().length === 0) return;
      acym_helperEditorWysid.versionControl++;
      jQuery('#acym__wysid__template').html(jQuery('#template_version_' + acym_helperEditorWysid.versionControl).val());
    }

    acym_helperEditorWysid.setColumnRefreshUiWYSID();
  }
};
var acym_editorWysidWordpress = {
  addMediaWPWYSID: function addMediaWPWYSID(ui, rows) {
    var htmlUi = jQuery(ui).html();
    rows = rows === undefined ? false : rows;
    var file_frame;
    file_frame = wp.media.frames.file_frame = wp.media({
      title: ACYM_JS_TXT.ACYM_SELECT_IMAGE_TO_UPLOAD,
      button: {
        text: ACYM_JS_TXT.ACYM_USE_THIS_IMAGE
      },
      multiple: false
    });
    file_frame.on('select', function () {
      var attachment = file_frame.state().get('selection').first().toJSON();
      var insertImg = true;

      if (attachment.url.indexOf('..') >= 0) {
        insertImg = confirm(ACYM_JS_TXT.ACYM_INSERT_IMG_BAD_NAME);
      }

      if (insertImg) {
        if (rows) {
          var padding = jQuery(ui).css('padding-top');

          if (!jQuery(ui).hasClass('acym__wysid__template__content')) {
            jQuery(ui).css('background-color', '').attr('bgcolor', '');
            jQuery(ui).attr('style', 'background-image: url(\'' + attachment.url + '\'); background-size: cover; background-position: center; background-repeat: no-repeat; padding: ' + padding + ' 0').attr('width', jQuery(ui).width());
          } else {
            jQuery(ui).attr('style', 'background-image: url(\'' + attachment.url + '\'); background-size: cover; background-position: center top; background-repeat: no-repeat; padding: ' + padding + ' 0 40px 0');
            if (jQuery(ui).css('background-image') !== 'none') jQuery('#acym__wysid__background-image__template-delete').css('display', 'flex');
          }

          acym_editorWysidNotifications.addEditorNotification({
            'message': ACYM_JS_TXT.ACYM_BECARFUL_BACKGROUND_IMG,
            'level': 'warning'
          });
        } else {
          var $link = jQuery(ui).find('.acym__wysid__link__image');
          var content = '<tr class="acym__wysid__column__element" style="position: relative; top: inherit; left: inherit; right: inherit; bottom: inherit; height: auto;">';
          content += '<td class="large-12 acym__wysid__column__element__td">';
          content += '<div class="acym__wysid__tinymce--image">';
          content += '<p style="text-align: center" data-mce-style="text-align: center">';
          if ($link.length > 0) content += '<a href="' + $link.attr('href') + '" class="acym__wysid__link__image" target="_blank">';
          content += '<img class="acym__wysid__media__inserted acym__wysid__media__inserted--focus acym__wysid__media__inserted--selected" src="' + attachment.url + '" title="' + acym_helper.escape(attachment.title) + '" alt="' + acym_helper.escape(attachment.alt) + '" style="max-width: 100%; height: auto;  box-sizing: border-box; padding: 0 5px;display:inline-block; margin-left: auto; margin-right: auto;"/>';
          if ($link.length > 0) content += '</a>';
          content += '</div>';
          content += '</p>';
          content += '</td>';
          content += '</tr>';
          jQuery(ui).replaceWith(content);
          jQuery('.acym__wysid__media__inserted--focus').on('load', function () {
            jQuery(this).removeClass('acym__wysid__media__inserted--focus');
            acym_helperEditorWysid.setColumnRefreshUiWYSID();
            acym_editorWysidVersioning.setUndoAndAutoSave();
          });
        }
      } else {
        if (!rows) {
          jQuery(ui).replaceWith('');
          acym_helperEditorWysid.setColumnRefreshUiWYSID();
          acym_editorWysidVersioning.setUndoAndAutoSave();
        }
      }
    });
    file_frame.on('escape', function () {
      if (!rows) {
        if (htmlUi.indexOf('insert_photo') !== -1) jQuery(ui).replaceWith('');
        acym_helperEditorWysid.setColumnRefreshUiWYSID();
        acym_editorWysidVersioning.setUndoAndAutoSave();
      }
    });
    file_frame.open();
  }
};